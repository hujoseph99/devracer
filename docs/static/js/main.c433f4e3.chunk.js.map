{"version":3,"sources":["theme.ts","features/user/userSlice.tsx","features/user/graphql.ts","features/auth/authSlice.tsx","features/navbar/Navbar.tsx","features/footer/Footer.tsx","features/main-menu/MainMenu.tsx","features/main-menu/constants.tsx","features/race-text-field/AceEditor.tsx","features/race-text-field/BackgroundEditor.tsx","features/race-text-field/utils.ts","features/race-text-field/raceFieldSlice.ts","features/race-text-field/graphql.ts","features/race-text-field/ForegroundEditor.tsx","features/race-text-field/RaceField.tsx","features/auth/FormTextField.tsx","features/auth/LoginForm.tsx","features/auth/LoginPage.tsx","features/auth/RegisterForm.tsx","features/auth/RegisterPage.tsx","features/auth/GitHubCallback.tsx","App.tsx","app/store.ts","index.tsx"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","type","primary","cyan","text","secondary","typography","h1","fontFamily","join","h2","h3","h4","h5","USER_SLICE_NAME","fetchUserData","createAsyncThunk","a","userid","axios","post","query","variables","response","data","user","initialState","profile","totalWordsTyped","racesCompleted","racesWon","maxTPM","averageTPMAllTime","averageTPMLast10","preferences","displayName","status","userSlice","createSlice","name","reducers","resetUser","state","extraReducers","builder","addCase","fulfilled","action","payload","pending","rejected","actions","selectDisplayName","AUTH_SLICE_NAME","login","body","githubCallback","toString","withCredentials","register","logout","thunkAPI","dispatch","refresh","authSlice","accessToken","refreshToken","isLoggedIn","resetStatus","selectRefreshToken","auth","selectStatus","selectIsLoggedIn","selectUserID","jwtDecode","Navbar","isHome","history","useHistory","useDispatch","useSelector","heading","loginLogoutButton","Button","variant","size","onClick","push","Grid","container","justify","item","xs","Box","display","height","justifyContent","alignItems","Typography","component","align","color","alignContent","Footer","width","mt","useStyles","makeStyles","titleIcon","fontSize","marginRight","MainMenu","classes","Container","maxWidth","minHeight","flexDirection","py","mb","className","spacing","endIcon","AceEditor","value","props","showGutter","highlightActiveLine","BackgroundEditor","mode","readOnly","onLoad","editor","commands","commmandKeyBinding","textInput","getElement","disabled","renderer","$cursorLayer","element","style","mapNumberToLanguage","language","mapGQLPracticeRaceToNewPracticeRace","res","practiceRace","snippet","id","raceContent","tokenCount","typedSoFar","timeLimit","RACE_FIELD","fetchNewPracticeRace","raceFieldSlice","race","typedSoFarChanged","console","log","selectSnippet","raceField","ForegroundEditor","focus","onBlur","ranges","onChange","useRef","markers","useEffect","undefined","current","marker","session","removeMarker","newMarkers","addMarker","editor_ref","RaceField","useState","setFocus","foregroundText","setForegroundText","backgroundText","setBackgroundText","setMarkers","snippetArray","setSnippetArray","replace","repeat","split","onClickCapture","e","playerText","playerTextArray","backgroundArray","i","length","playerLine","j","Range","snippetLine","differenceIndex","slice","FormTextField","TextField","margin","fullWidth","avatar","backgroundColor","red","submit","oauthIcons","LoginForm","username","password","rememberMe","formState","setFormState","showPassword","setShowPassword","handleChange","key","event","prev","target","sm","Paper","Avatar","LockOutlined","gutterBottom","autoFocus","label","error","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","disableFocusRipple","disableRipple","disableTouchRipple","VisibilityOff","Visibility","FormControlLabel","control","Checkbox","checked","Link","href","GitHub","LoginPage","RegisterForm","email","nickname","RegisterPage","GitHubCallback","loggedIn","URLSearchParams","window","location","search","App","firstTime","setFirstTime","CssBaseline","path","to","persistConfig","version","storage","whitelist","rootReducer","combineReducers","raceFieldReducer","userReducer","authReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persister","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.c433f4e3.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { cyan } from \"@material-ui/core/colors\";\n\nexport const theme = responsiveFontSizes(createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t\tprimary: cyan,\n\t\ttext: {\n\t\t\tprimary: '#fafafa', // mui grey 50\n\t\t\tsecondary: '#e0e0e0' // mui grey 300\n\t\t}\n\t},\n\ttypography: {\n\t\th1: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th2: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th3: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th4: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th5: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\tfontFamily: [\n\t\t\t'\"Helvetica Neue\"',\n\t\t\t'-apple-system',\n\t\t\t'Arial',\n\t\t\t'sans-serif',\n\t\t].join(','),\n\t},\n}));\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../app/store\";\nimport { UserRequest, UserState, UserResponse, UserStateGQLResponse } from \"./types\";\nimport { fetchUserDataGQL } from './graphql';\n\nconst USER_SLICE_NAME = \"user\";\n\nexport const fetchUserData = createAsyncThunk<UserResponse, UserRequest>(\n\t`${USER_SLICE_NAME}/fetchUserData`,\n\tasync ({ userid }) => {\n\t\tconst response = await axios.post<UserStateGQLResponse>(\n\t\t\t'http://localhost:8080/graphql',\n\t\t\t{ query: fetchUserDataGQL, variables: { userid } }\n\t\t)\n\n\t\treturn response.data.data.user;\n\t}\n)\n\nconst initialState: UserState = {\n\tprofile: {\n\t\ttotalWordsTyped: 0,\n\t\tracesCompleted: 0,\n\t\tracesWon: 0,\n\t\tmaxTPM: 0,\n\t\taverageTPMAllTime: 0,\n\t\taverageTPMLast10: 0,\n\t},\n\tpreferences: {\n\t\tdisplayName: \"\",\n\t},\n\tstatus: 'idle',\n}\n\nconst userSlice = createSlice({\n\tname: USER_SLICE_NAME,\n\tinitialState,\n\treducers: {\n\t\tresetUser: state => {\n\t\t\tstate.profile = initialState.profile;\n\t\t\tstate.preferences = initialState.preferences;\n\t\t\tstate.status = initialState.status;\n\t\t}\n\t},\n\textraReducers: builder => {\n\t\tbuilder.addCase(fetchUserData.fulfilled, (state, action) => {\n\t\t\tstate.preferences = action.payload.preferences;\n\t\t\tstate.profile = action.payload.profile;\n\t\t\tstate.status = 'succeeded';\n\t\t});\n\t\tbuilder.addCase(fetchUserData.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(fetchUserData.rejected, state => {\n\t\t\tstate.preferences = initialState.preferences;\n\t\t\tstate.profile = initialState.profile;\n\t\t\tstate.status = 'failed';\n\t\t});\n\t},\n});\n\nexport default userSlice.reducer;\n\nexport const { resetUser } = userSlice.actions;\n\nexport const selectDisplayName = (state: RootState) => state.user.preferences.displayName;\n","// GraphQL query for getting a NewPracticeRace\nexport const fetchUserDataGQL = `\n\tquery fetchUserData($userid: String) {\n\t\tuser(userId: $userid) {\n\t\t\tpreferences {\n\t\t\t\tdisplayName\n\t\t\t}\n\t\t\tprofile {\n\t\t\t\taverageTPMAllTime\n\t\t\t\taverageTPMLast10\n\t\t\t\tmaxTPM\n\t\t\t\tracesCompleted\n\t\t\t\tracesWon\n\t\t\t\ttotalWordsTyped\n\t\t\t}\n\t\t}\n\t}\n`;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport { AuthState, JWTPayload, LoginBody, LoginResponse, LogoutBody, RefreshBody, RefreshResponse, RegisterBody, RegisterResponse } from \"./types\"\nimport jwtDecode from 'jwt-decode';\n\nimport axios from 'axios';\nimport { RootState } from \"../../app/store\";\nimport { resetUser } from \"../user/userSlice\";\n\nconst AUTH_SLICE_NAME = \"auth\"\n\nexport const login = createAsyncThunk<LoginResponse, LoginBody>(\n\t`${AUTH_SLICE_NAME}/login`,\n\tasync body => {\n\t\tconst response = await axios.post<LoginResponse>(\n\t\t\t'http://localhost:8080/auth/login',\n\t\t\tbody\n\t\t)\n\t\treturn response.data;\n\t}\n);\n\n\nexport const githubCallback = createAsyncThunk<LoginResponse, URLSearchParams>(\n\t`${AUTH_SLICE_NAME}/githubCallback`,\n\tasync body => {\n\t\tconst response = await axios.post<LoginResponse>(\n\t\t\t'http://localhost:8080/auth/githubCallback?' + body.toString(),\n\t\t\tbody, { withCredentials: true }\n\t\t)\n\t\treturn response.data;\n\t}\n);\n\nexport const register = createAsyncThunk<RegisterResponse, RegisterBody>(\n\t`${AUTH_SLICE_NAME}/register`,\n\tasync body => {\n\t\tconst response = await axios.post<RegisterResponse>(\n\t\t\t'http://localhost:8080/auth/register',\n\t\t\tbody\n\t\t);\n\t\treturn response.data;\n\t}\n);\n\nexport const logout = createAsyncThunk<{}, LogoutBody>(\n\t`${AUTH_SLICE_NAME}/logout`,\n\tasync (body, thunkAPI)=> {\n\t\tawait axios.post<{}>(\n\t\t\t'http://localhost:8080/auth/logout',\n\t\t\tbody\n\t\t);\n\t\tthunkAPI.dispatch(resetUser());\n\t\treturn {};\n\t}\n)\n\nexport const refresh = createAsyncThunk<RefreshResponse, RefreshBody>(\n\t`${AUTH_SLICE_NAME}/refresh`,\n\tasync body => {\n\t\tconst response = await axios.post<RefreshResponse>(\n\t\t\t'http://localhost:8080/auth/refresh',\n\t\t\tbody\n\t\t);\n\t\treturn response.data;\n\t}\n)\n\nconst initialState: AuthState = {\n\taccessToken: \"\",\n\trefreshToken: \"\",\n\tstatus: 'idle',\n\tisLoggedIn: false,\n};\n\nexport const authSlice = createSlice({\n\tname: AUTH_SLICE_NAME,\n\tinitialState,\n\treducers: {\n\t\tresetStatus: state => {\n\t\t\tstate.status = 'idle'\n\t\t}\n\t},\n\textraReducers: builder => {\n\t\tbuilder.addCase(login.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(login.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(login.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t});\n\n\t\tbuilder.addCase(githubCallback.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(githubCallback.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(githubCallback.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t});\n\n\t\tbuilder.addCase(register.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(register.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(register.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t});\n\n\t\tbuilder.addCase(refresh.fulfilled, (state, action) => {\n\t\t\tstate.status = 'idle';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(refresh.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(refresh.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t\tstate.accessToken = \"\";\n\t\t\tstate.refreshToken = \"\";\n\t\t\tstate.isLoggedIn = false;\n\t\t});\n\n\t\tbuilder.addCase(logout.fulfilled, state => {\n\t\t\tstate.accessToken = \"\";\n\t\t\tstate.refreshToken = \"\";\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.isLoggedIn = false;\n\t\t})\n\t\tbuilder.addCase(logout.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(logout.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t})\n\t},\n});\n\nexport default authSlice.reducer;\n\nexport const { resetStatus } = authSlice.actions;\n\nexport const selectAccessToken = (state: RootState) => state.auth.accessToken;\nexport const selectRefreshToken = (state: RootState) => state.auth.refreshToken;\nexport const selectStatus = (state: RootState) => state.auth.status;\nexport const selectIsLoggedIn = (state: RootState) => state.auth.isLoggedIn;\n\nexport const selectUserID = (state:RootState) => {\n\tif (state.auth.accessToken) {\n\t\tconst accessToken = state.auth.accessToken;\n\t\tconst decoded = jwtDecode<JWTPayload>(accessToken);\n\t\treturn decoded.userid;\n\t}\n\treturn \"\";\n}\n","import React from 'react';\n\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport { logout, resetStatus, selectIsLoggedIn, selectRefreshToken } from '../auth/authSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDisplayName } from '../user/userSlice';\n\ninterface NavbarProps {\n\tisHome?: boolean\n}\n\nexport const Navbar = ({\n\tisHome = false\n}: NavbarProps): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\tconst isLoggedIn = useSelector(selectIsLoggedIn);\n\tconst refreshToken = useSelector(selectRefreshToken);\n\tconst displayName = useSelector(selectDisplayName)\n\n\tconst onLoginClick = () => {\n\t\thistory.push('/login');\n\t}\n\n\tconst onLogoutClick = () => {\n\t\tdispatch(logout({ refreshToken }));\n\t\tdispatch(resetStatus);\n\t\thistory.push('/');\n\t};\n\n\tconst onHomeClick = () => {\n\t\thistory.push('/');\n\t}\n\n\tconst heading = isLoggedIn ? \"Welcome back, \" + displayName : \"Playing as Guest\";\n\n\tconst loginLogoutButton = isLoggedIn ? (\n\t\t<Button variant='outlined' size='small' onClick={onLogoutClick}>Logout</Button>\n\t) : (\n\t\t<Button variant='outlined' size='small' onClick={onLoginClick}>Login</Button>\n\t)\n\n\treturn (\n\t\t<Grid container justify='space-between'>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<Box display='flex'>\n\t\t\t\t\t<Button variant='outlined' size='small' onClick={onHomeClick}>Home</Button>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<Box height='100%' display='flex' justifyContent='center' alignItems='center'>\n\t\t\t\t\t<Typography component='span' align=\"center\" color='textSecondary'>{heading}</Typography>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3} justify='flex-end'>\n\t\t\t\t<Box display='flex' justifyContent='flex-end' alignContent='center'>\n\t\t\t\t\t{loginLogoutButton}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Box, Typography } from '@material-ui/core';\nimport React from 'react';\n\nexport const Footer = (): JSX.Element => {\n\treturn (\n\t\t<Box display='flex' width='100%' mt={4} justifyContent='center'>\n\t\t\t<Typography align='center' color='textSecondary'>Made with &#10084;&#65039; by Joseph and David</Typography>\n\t\t</Box>\n\t);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\n\nimport { Box, Button, Container, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport { blurb } from './constants';\nimport { Navbar } from '../navbar/Navbar';\nimport { Footer } from '../footer/Footer';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n\ttitleIcon: {\n\t\tfontSize: theme.typography.h2.fontSize,\n\t\tmarginRight: 10\n\t}\n}));\n\nexport const MainMenu = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\n\tconst onPracticeClick = () => {\n\t\thistory.push('/practice');\n\t}\n\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' py={5}>\n\t\t\t\t<Navbar isHome />\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t{/* <Typist> */}\n\t\t\t\t\t\t\t<Box mt='5vh' display='flex' width='100%' justifyContent='center' alignItems='center' mb={3}>\n\t\t\t\t\t\t\t\t<KeyboardIcon className={classes.titleIcon} />\n\t\t\t\t\t\t\t\t{/* <Typist.Delay ms={1000} /> */}\n\t\t\t\t\t\t\t\t<Typography component='span' variant='h3'> \n\t\t\t\t\t\t\t\t\tCodeRacers\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* </Typist> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t<Typography variant='body1' align='center'>\n\t\t\t\t\t\t\t{blurb}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Box mt='5vh' display='flex' width='100%' justifyContent='center' alignItems='center'>\n\t\t\t\t\t\t\t<Typography component='span' variant='h4'> \n\t\t\t\t\t\t\t\tModes\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} spacing={3}>\n\t\t\t\t\t\t<Box display='flex' width='100%' justifyContent='center' mt=\"3vh\">\n\t\t\t\t\t\t\t<Button variant='contained' size='large' endIcon={<PersonIcon />} onClick={onPracticeClick}>Practice</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Box mt='auto'>\n\t\t\t\t\t<Footer />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Container>\n\t);\n}\n","\nexport const blurb = \"CodeRacers is an online typing game inspired by TypeRacer. Type the most popular snippets from supported languages and increase your coding speed!\"\n","import React from 'react';\n\nimport AceEditorComponent, { IAceEditorProps } from \"react-ace\";\n\nimport \"./editor.css\"\n\n// all currently supported languages\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-plain_text\";\n\n// currently supported themes\nimport \"ace-builds/src-noconflict/theme-dracula\";\n\n// just a simple implementation for now\ninterface AceEditorProps extends IAceEditorProps {\n\tvalue?: string\n\tclassName? : string\n}\n\nexport const AceEditor = ({ value = \"\", className = \"\", ...props }: AceEditorProps): JSX.Element => {\n\treturn (\n\t\t<AceEditorComponent \n\t\t\tclassName={\"aceEditor \" + className}\n\t\t\tvalue={value}\n\t\t\ttheme=\"dracula\"\n\t\t\tshowGutter={false}\n\t\t\thighlightActiveLine={false}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n","import React from 'react'\nimport { Ace } from 'ace-builds';\nimport { AceEditor } from './AceEditor';\n\nexport const BackgroundEditor = ({text}: {text: string}): JSX.Element => {\n\n\tconst handleLoad = (editor: Ace.Editor) => {\n\t\t// settings to make the text editor look like it's disabled, some of the things are\n\t\t// not yet supported in typescript so have to ignore them\n\t\t// editor.getSession().selection.on('changeSelection', function ()\n\t\t// {\n\t\t// \teditor.getSession().selection.clearSelection();\n\t\t// });\n\t\t// @ts-ignore\n\t\teditor.commands.commmandKeyBinding={}\n\t\t// @ts-ignore\n\t\teditor.textInput.getElement().disabled=true\n\t\t// @ts-ignore\n\t\teditor.renderer.$cursorLayer.element.style.display = \"none\";\n\t}\n\n\treturn (\n\t\t<AceEditor \n\t\t\tmode='plain_text'\n\t\t\tclassName='backgroundEditor'\n\t\t\tvalue={text}\n\t\t\treadOnly={true}\n\t\t\tonLoad={handleLoad}\n\t\t/>\n\t);\n}\n","import { language, Race, NewPracticeRaceGQLResponse } from \"./types\";\n\n// maps an int from the backend to a language\nconst mapNumberToLanguage = (language: number): language => {\n\tswitch(language) {\n\t\tcase 1:\n\t\t\treturn 'c_cpp';\n\t\tcase 2:\n\t\t\treturn 'golang';\n\t\tcase 3:\n\t\t\treturn 'javascript';\n\t\tcase 4:\n\t\t\treturn 'python';\n\t\tdefault:\n\t\t\treturn 'plain_text'\n\t}\n}\n\n// maps the graphql response into our own NewPracticeRace type. The only real change\n// that we are making is to map the language to something usable on our end\nexport const mapGQLPracticeRaceToNewPracticeRace = (res: NewPracticeRaceGQLResponse): Race => {\n\tlet practiceRace = res.data.practiceRace;\n\tlet snippet = practiceRace.snippet\n\treturn {\n\t\tsnippet: {\n\t\t\tid: snippet.id,\n\t\t\traceContent: snippet.raceContent,\n\t\t\ttokenCount: snippet.tokenCount,\n\t\t\tlanguage: mapNumberToLanguage(snippet.language)\n\t\t},\n\t\ttypedSoFar: '',\n\t\ttimeLimit: practiceRace.timeLimit\n\t};\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\nimport axios from 'axios'\n\nimport { newPracticeRaceGQL } from \"./graphql\";\nimport { Race, NewPracticeRaceGQLResponse, RaceFieldState } from './types'\nimport { mapGQLPracticeRaceToNewPracticeRace } from \"./utils\";\n\n// redux prefix for this slice\nconst RACE_FIELD = 'raceField';\n\n// fetches a new practice race from the backend using graphql\nexport const fetchNewPracticeRace = createAsyncThunk<Race>(\n\t`${RACE_FIELD}/fetchNewPracticeRace`, \n\tasync () => {\n\t\tconst response = await axios.post<NewPracticeRaceGQLResponse>(\n\t\t\t'http://localhost:8080/graphql', \n\t\t\t{ query: newPracticeRaceGQL }\n\t\t);\n\t\treturn mapGQLPracticeRaceToNewPracticeRace(response.data);\n\t}\n);\n\nconst initialState: RaceFieldState = {\n\trace: {\n\t\tsnippet: {\n\t\t\tid: '0',\n\t\t\traceContent: '',\n\t\t\ttokenCount: 0,\n\t\t\tlanguage: 'plain_text',\n\t\t},\n\t\ttypedSoFar: '',\n\t\ttimeLimit: 0\n\t},\n\tstatus: 'idle'\n}\n\nconst raceFieldSlice = createSlice({\n\tname: RACE_FIELD,\n\tinitialState,\n\treducers: {\n\t\t// action payload should just contain the string that the user has typed\n\t\t// so far\n\t\ttypedSoFarChanged: (state, action: PayloadAction<string>) => {\n\t\t\tstate.race.typedSoFar = action.payload;\n\t\t}\n\t},\n\textraReducers: builder => {\n\t\tbuilder.addCase(fetchNewPracticeRace.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.race = action.payload;\n\t\t});\n\t\t// TODO: Add some error handling here, have to figure out what to do in the\n\t\t// case of an error\n\t\tbuilder.addCase(fetchNewPracticeRace.rejected, (state, action) => {\n\t\t\tconsole.log(action);\n\t\t})\n\t}\n})\n\nexport default raceFieldSlice.reducer;\n\nexport const { typedSoFarChanged } = raceFieldSlice.actions;\n\nexport const selectSnippet = (state: RootState) => state.raceField.race.snippet;\nexport const selectTypedSoFar = (state: RootState) => state.raceField.race.typedSoFar;\n","// GraphQL query for getting a NewPracticeRace\nexport const newPracticeRaceGQL = `\n  query getPracticeRace {\n    practiceRace {\n      snippet {\n        id\n        raceContent\n        tokenCount\n        language\n      }\n      timeLimit\n    }\n  }\n`;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Ace } from 'ace-builds';\n\nimport { AceEditor } from './AceEditor';\nimport { selectSnippet } from './raceFieldSlice';\n\nimport \"./editor.css\"\n\ninterface ForegroundEditorProps {\n\tfocus?: boolean;\n\tonBlur?: () => void;\n\tranges: Ace.Range[];\n\ttext: string;\n\tonChange: (s: string) => void;\n}\n\nexport const ForegroundEditor = ({\n\tfocus = false,\n\tonBlur,\n\tranges,\n\tonChange,\n\ttext\n}: ForegroundEditorProps): JSX.Element => {\n\tconst snippet = useSelector(selectSnippet);\n\tconst editor = useRef<Ace.Editor>();\n\tconst markers = useRef<number[]>([]);\n\t\n\tuseEffect(() => {\n\t\tif (editor.current !== undefined){\n\t\t\tfor (let marker of markers.current){\n\t\t\t\teditor.current.session.removeMarker(marker);\n\t\t\t}\n\n\t\t\tlet newMarkers: number[] = [];\n\t\t\tfor (let marker of ranges){\n\t\t\t\tnewMarkers.push(editor.current.session.addMarker(marker, \"error-marker\", \"text\"));\n\t\t\t}\n\t\t\tmarkers.current = newMarkers;\n\t\t}\n\t}, [ranges])\n\n\tuseEffect(() => {\n\t\tif (editor && focus) {\n\t\t\teditor.current?.focus();\n\t\t}\n\t}, [editor, focus])\n\n\tconst handleLoad = (editor_ref: Ace.Editor) => {\n\t\teditor.current = editor_ref;\n\t}\n\n\treturn (\n\t\t<AceEditor  \n\t\t\tclassName=\"foregroundEditor\"\n\t\t\tmode={snippet.language}\n\t\t\tonLoad={handleLoad}\n\t\t\tonBlur={onBlur}\n\t\t\tonChange={onChange}\n\t\t\tvalue={text}\n\t\t/>\n\t);\n}\n","import React, { SyntheticEvent, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Box } from '@material-ui/core';\n\nimport { Ace, Range } from 'ace-builds';\n\nimport { BackgroundEditor } from './BackgroundEditor';\nimport { ForegroundEditor } from './ForegroundEditor';\nimport { fetchNewPracticeRace } from './raceFieldSlice';\nimport { selectSnippet } from './raceFieldSlice';\n\n\n// const navkeys = [\"ArrowDown\",\n// \t\"ArrowLeft\",\n// \t\"ArrowRight\",\n// \t\"ArrowUp\",\n// \t\"End\",\n// \t\"Home\",\n// \t\"PageDown\",\n// \t\"PageUp\"];\n\n\n// function filterMouseEvents(e: SyntheticEvent) {\n// \te.stopPropagation()\n// \te.preventDefault()\n// \treturn true\n// }\n\nexport const RaceField = (): JSX.Element => {\n\tconst snippet = useSelector(selectSnippet);\n\tconst dispatch = useDispatch();\n\tconst [focus, setFocus] = useState(false);\n\tconst [foregroundText, setForegroundText] = useState(\"\");\n\tconst [backgroundText, setBackgroundText] = useState(\"\");\n\tconst [markers, setMarkers] = useState<Ace.Range[]>([]);\n\tconst [snippetArray, setSnippetArray] = useState<string[]>([]);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchNewPracticeRace());\n\t}, [dispatch])\n\n\tuseEffect(() => {\n\t\tsetSnippetArray(snippet.raceContent.replace(/\\t/g, ' '.repeat(4)).split('\\n'));\n\t\tsetBackgroundText(snippet.raceContent);\n\t}, [snippet])\n\n\n\tconst onFocus = (e: SyntheticEvent) => {\n\t\tsetFocus(true);\n\t}\n\n\tconst onBlur = () => {\n\t\tsetFocus(false);\n\t}\n\n\tconst onChange = (playerText: string) => {\n\t\tif (playerText === backgroundText){\n\t\t\t// win\n\t\t}\n\t\tconst playerTextArray = playerText.split(\"\\n\");\n\n\t\tconst backgroundArray: string[] = [];\n\t\tconst newMarkers: Ace.Range[] = [];\n\n\t\tlet i = 0;\n\t\t// compare text\n\t\tfor (; i < playerTextArray.length; i++) {\n\t\t\tlet playerLine = playerTextArray[i];\n\n\t\t\t// if no line in snippet to compare with, the rest of text is wrong. mark wrong for each line\n\t\t\tif (i > snippetArray.length - 1) {\n\t\t\t\tfor (let j = i; j < playerTextArray.length; j++) {\n\t\t\t\t\tnewMarkers.push(new Range(j, 0, j, playerLine.length));\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t// compare with line in snippet\n\t\t\tlet snippetLine = snippetArray[i];\n\t\t\tlet differenceIndex = 0;\n\t\t\twhile (playerLine[differenceIndex] === snippetLine[differenceIndex] && differenceIndex < playerLine.length) differenceIndex++;\n\n\t\t\tif (differenceIndex < playerLine.length) {\n\t\t\t\tnewMarkers.push(new Range(i, differenceIndex, i, playerLine.length));\n\t\t\t}\n\t\t\tif (differenceIndex <= snippetLine.length) {\n\t\t\t\tsnippetLine = snippetLine.slice(0, differenceIndex) + ' '.repeat(playerLine.length - differenceIndex) + snippetLine.slice(differenceIndex)\n\t\t\t}\n\t\t\tbackgroundArray.push(snippetLine)\n\t\t}\n\n\t\t// if player_text was shorter than snippet, push rest of snippet into the background.\n\t\tfor (; i < snippetArray.length; i++) {\n\t\t\tbackgroundArray.push(snippetArray[i]);\n\t\t}\n\n\t\tsetBackgroundText(backgroundArray.join(\"\\n\"));\n\t\tsetMarkers(newMarkers);\n\t\tif (foregroundText !== playerText) setForegroundText(playerText);\n\t}\n\n\treturn (\n\t\t<Box style={{ height: \"1000px\", width: \"1000px\" }}\n\t\t\t// onKeyDownCapture={filterKeyboardEvents}\n\t\t\t// onKeyPressCapture={filterKeyboardEvents}\n\t\t\t// onKeyUpCapture={filterKeyboardEvents}\n\t\t\tonClickCapture={onFocus}>\n\t\t\t{/* onMouseDownCapture={filterMouseEvents}\n\t\t\tonMouseMoveCapture={filterMouseEvents}\n\t\t\tonFocusCapture={filterMouseEvents}\n\t\t\tonChangeCapture={filterMouseEvents}\n\t\t\tonBlurCapture={filterMouseEvents}\n\t\t\tonMouseUpCapture={filterMouseEvents}> */}\n\t\t\t<BackgroundEditor text={backgroundText}/>\n\t\t\t{/* elements that appear later are on top */}\n\t\t\t<ForegroundEditor text={foregroundText} ranges={markers} focus={focus} onChange={onChange} onBlur={onBlur} />\n\t\t</Box>\n\t)\n};\n","import React from 'react';\n\nimport { Box, TextField, TextFieldProps } from '@material-ui/core';\n\nexport const FormTextField = ({\n\t...props\n}: TextFieldProps): JSX.Element => (\n\t<Box width='100%'>\n\t\t<TextField \n\t\t\tvariant='outlined' \n\t\t\tmargin='normal'\n\t\t\tfullWidth\n\t\t\t{...props}\n\t\t/>\n\t</Box>\n)\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Avatar, Box, Button, Checkbox, FormControlLabel, Grid, IconButton, InputAdornment, Link, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { LockOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { red } from '@material-ui/core/colors';\n\nimport { FormTextField } from './FormTextField';\nimport { login, resetStatus, selectStatus } from './authSlice';\nimport { useHistory } from 'react-router';\n\nimport { GitHub } from '@material-ui/icons';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: red[400]\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2)\n\t},\n\toauthIcons: {\n\t\tcolor: theme.palette.text.secondary\n\t}\n}));\n\ninterface FormState {\n\tusername: string;\n\tpassword: string;\n\trememberMe: boolean;\n}\n\nexport const LoginForm = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\tconst [formState, setFormState] = useState<FormState>({\n\t\tusername: '',\n\t\tpassword: '',\n\t\trememberMe: false,\n\t});\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst status = useSelector(selectStatus);\n\n\t// reset it on load too\n\tuseEffect(() => {\n\t\tdispatch(resetStatus());\n\t\treturn () => {\n\t\t\tdispatch(resetStatus());\n\t\t}\n\t}, [dispatch]);\n\n\t// TODO: BUG WITH THIS - SOMETIMES IT WILL COME IN AS SUCCEEDED (NAMELY AFTER LOGGING OUT)\n\tuseEffect(() => {\n\t\tif (status === 'succeeded') {\n\t\t\thistory.push('/');\n\t\t\tdispatch(resetStatus());\n\t\t}\n\t}, [dispatch, history, status])\n\n\tconst handleClickShowPassword = () => {\n\t\tsetShowPassword(prev => !prev);\n\t}\n\n\tconst handleClickRememberMe = () => {\n\t\tsetFormState(prev => ({ ...prev, rememberMe: !prev.rememberMe }));\n\t}\n\n\tconst handleChange = (key: keyof FormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetFormState(prev => ({ ...prev, [key]: event.target.value }));\n\t}\n\n\tconst handleSubmit = () => {\n\t\tdispatch(login(formState));\n\t}\n\n\tconst handleRegister = () => {\n\t\thistory.push('/register');\n\t}\n\n\treturn (\n\t\t<Grid container justify='center'>\n\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Box py={5} mt={4}>  { /* because footer also has mt={4} */}\n\t\t\t\t\t\t<Grid container justify='center'>\n\t\t\t\t\t\t\t<Grid item xs={10} sm={8}>\n\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='column' alignItems='center' width='100%'>\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t\t\t\t\t<LockOutlined />\n\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" align='center' gutterBottom>Sign in</Typography>\n\t\t\t\t\t\t\t\t\t<Box width='100%' mt={2}>\n\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.username}\n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('username')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.password}\n\t\t\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\n\t\t\t\t\t\t\t\t\t\t\thelperText={status === 'failed' ? 'The username and password were incorrect' : ''}\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showPassword ? <VisibilityOff /> : <Visibility />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={(\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={formState.rememberMe}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickRememberMe}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t\t\t\t\t\t\t\t<Link variant=\"body2\" onClick={handleRegister}>\n\t\t\t\t\t\t\t\t\t\t\t\tDon't have an account? Sign Up\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t<Box mt={4} display=\"flex\" flexDirection=\"column\" alignItems='center' width='100%'>\n\t\t\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>or you can sign in with</Typography>\n\t\t\t\t\t\t\t\t\t\t<IconButton href=\"http://localhost:8080/auth/githubLogin\"><GitHub className={classes.oauthIcons}/></IconButton>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import { Box, Container } from '@material-ui/core';\nimport React from 'react';\nimport { Footer } from '../footer/Footer';\nimport { Navbar } from '../navbar/Navbar';\nimport { LoginForm } from './LoginForm';\n\nexport const LoginPage = (): JSX.Element => {\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' justifyContent='space-between' py={5}>\n\t\t\t\t<Navbar />\n\t\t\t\t<LoginForm />\n\t\t\t\t<Footer />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Avatar, Box, Button, Grid, IconButton, InputAdornment, Link, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { LockOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { red } from '@material-ui/core/colors';\n\nimport { FormTextField } from './FormTextField';\nimport { register, resetStatus, selectStatus } from './authSlice';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: red[400]\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2)\n\t}\n}));\n\ninterface FormState {\n\tusername: string;\n\tpassword: string;\n\temail: string;\n\tnickname: string;\n}\n\nexport const RegisterForm = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\tconst [formState, setFormState] = useState<FormState>({\n\t\tusername: '',\n\t\tpassword: '',\n\t\temail: '',\n\t\tnickname: '',\n\t});\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst status = useSelector(selectStatus);\n\n\tuseEffect(() => {\n\t\tdispatch(resetStatus());\n\t\treturn () => {\n\t\t\tdispatch(resetStatus());\n\t\t}\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tif (status === 'succeeded')  {\n\t\t\tdispatch(resetStatus());\n\t\t\thistory.push('/');\n\t\t} \n\t}, [dispatch, history, status]);\n\n\tconst handleClickShowPassword = () => {\n\t\tsetShowPassword(prev => !prev);\n\t}\n\n\tconst handleChange = (key: keyof FormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetFormState(prev => ({ ...prev, [key]: event.target.value }));\n\t}\n\n\tconst handleSubmit = () => {\n\t\tdispatch(register(formState));\n\t}\n\n\tconst handleLogin = () => {\n\t\tdispatch(resetStatus());\n\t\thistory.push('/login');\n\t}\n\t\n\treturn (\n\t\t<Grid container justify='center'>\n\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Box py={5} mt={4}>  { /* because footer also has mt={4} */} \n\t\t\t\t\t\t<Grid container justify='center'>\n\t\t\t\t\t\t\t<Grid item xs={10} sm={8}>\n\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='column' alignItems='center' width='100%'>\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t\t\t\t\t<LockOutlined />\n\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" align='center' gutterBottom>Register</Typography>\n\t\t\t\t\t\t\t\t\t<Box width='100%' mt={2}>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tautoFocus \n\t\t\t\t\t\t\t\t\t\t\tlabel='Username' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.username} \n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('username')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tlabel='Password' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.password}\n\t\t\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showPassword ? <VisibilityOff /> : <Visibility />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tlabel='Email' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.email} \n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('email')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tlabel='Nickname' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.nickname} \n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('nickname')}\n\t\t\t\t\t\t\t\t\t\t\thelperText={status === 'failed' ? 'The username or email has already been taken.' : ''}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t\t\t\t\t\t\t\t<Link variant=\"body2\" onClick={handleLogin}>\n\t\t\t\t\t\t\t\t\t\t\t\tAlready have an account? Log In\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import { Box, Container } from '@material-ui/core';\nimport React from 'react';\nimport { Footer } from '../footer/Footer';\nimport { Navbar } from '../navbar/Navbar';\nimport { RegisterForm } from './RegisterForm';\n\nexport const RegisterPage = (): JSX.Element => {\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' justifyContent='space-between' py={5}>\n\t\t\t\t<Navbar />\n\t\t\t\t<RegisterForm />\n\t\t\t\t<Footer />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { githubCallback, selectIsLoggedIn } from './authSlice';\n\n\nexport const GitHubCallback = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(githubCallback(new URLSearchParams(window.location.search)));\n    }, [dispatch])\n\n    useEffect(() => {\n        if (loggedIn) {\n            history.push('/')\n        }\n    }, [loggedIn, history])\n\n    return <></>\n}\n\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n\tRoute,\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\n\r\nimport { theme } from './theme';\r\nimport { MainMenu } from './features/main-menu/MainMenu';\r\nimport { RaceField } from './features/race-text-field/RaceField';\r\nimport { LoginPage } from './features/auth/LoginPage';\r\nimport { RegisterPage } from './features/auth/RegisterPage';\r\nimport { refresh, selectIsLoggedIn, selectRefreshToken, selectUserID } from './features/auth/authSlice';\r\nimport { fetchUserData } from './features/user/userSlice';\r\nimport { GitHubCallback } from './features/auth/GitHubCallback';\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const refreshToken = useSelector(selectRefreshToken);\r\n  const [firstTime, setFirstTime] = useState(true);\r\n\r\n  const loggedIn = useSelector(selectIsLoggedIn);\r\n  const userid = useSelector(selectUserID);\r\n\r\n  // check if logged in on first load of web app\r\n  useEffect(() => {\r\n    if (firstTime && refreshToken) {\r\n      dispatch(refresh({ refreshToken }));\r\n      setFirstTime(false);\r\n    }\r\n  }, [firstTime, setFirstTime, refreshToken, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      dispatch(fetchUserData({ userid }))\r\n    }\r\n  }, [dispatch, loggedIn, userid])\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Switch>\r\n        <Route path='/auth/githubCallback'>\r\n            <GitHubCallback />\r\n          </Route>\r\n          <Route path='/practice'>\r\n            <RaceField />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path='/'>\r\n            <MainMenu />\r\n          </Route>\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport raceFieldReducer from '../features/race-text-field/raceFieldSlice'\r\nimport authReducer from '../features/auth/authSlice';\r\nimport userReducer from '../features/user/userSlice';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n  whitelist: ['auth']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  raceField: raceFieldReducer,\r\n  user: userReducer,\r\n  auth: authReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persister = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { persister, store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persister}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["theme.ts","config.ts","features/user/userSlice.tsx","features/user/graphql.ts","features/auth/authSlice.tsx","features/navbar/Navbar.tsx","features/footer/Footer.tsx","features/main-menu/MainMenu.tsx","features/main-menu/constants.tsx","features/auth/FormTextField.tsx","features/auth/LoginForm.tsx","features/auth/LoginPage.tsx","features/auth/RegisterForm.tsx","features/auth/RegisterPage.tsx","features/game/utils.ts","features/game/gameSlice.ts","features/race-text-field/AceEditor.tsx","features/race-text-field/BackgroundEditor.tsx","features/race-text-field/ForegroundEditor.tsx","features/race-text-field/RaceField.tsx","features/game/Progress.tsx","features/game/UserProgress.tsx","features/game/StatusBar.tsx","features/game/custom-game/LinkDialog.tsx","features/game/custom-game/LobbyClosedDialog.tsx","features/game/custom-game/CustomGame.tsx","features/game/custom-game/constants.ts","features/auth/GitHubCallback.tsx","App.tsx","features/race-text-field/utils.ts","features/race-text-field/raceFieldSlice.ts","features/race-text-field/graphql.ts","app/store.ts","index.tsx"],"names":["theme","responsiveFontSizes","createMuiTheme","palette","type","primary","cyan","text","secondary","typography","h1","fontFamily","join","h2","h3","h4","h5","BACKEND_HOSTNAME","process","USER_SLICE_NAME","fetchUserData","createAsyncThunk","a","userid","axios","post","query","variables","response","data","user","initialState","profile","totalWordsTyped","racesCompleted","racesWon","maxTPM","averageTPMAllTime","averageTPMLast10","preferences","displayName","status","userSlice","createSlice","name","reducers","resetUser","state","extraReducers","builder","addCase","fulfilled","action","payload","pending","rejected","actions","selectDisplayName","auth","isLoggedIn","AUTH_SLICE_NAME","login","body","githubCallback","get","toString","withCredentials","register","logout","thunkAPI","dispatch","refresh","authSlice","accessToken","refreshToken","resetStatus","selectRefreshToken","selectStatus","selectIsLoggedIn","selectUserID","jwtDecode","Navbar","isHome","history","useHistory","useDispatch","useSelector","heading","loginLogoutButton","Button","variant","size","onClick","push","Grid","container","justify","item","xs","Box","display","height","justifyContent","alignItems","Typography","component","align","color","alignContent","Footer","width","mt","useStyles","makeStyles","titleIcon","fontSize","marginRight","MainMenu","classes","Container","maxWidth","minHeight","flexDirection","py","flexGrow","mb","className","spacing","endIcon","FormTextField","props","TextField","margin","fullWidth","avatar","backgroundColor","red","submit","oauthIcons","LoginForm","useState","username","password","rememberMe","formState","setFormState","showPassword","setShowPassword","useEffect","handleChange","key","event","prev","target","value","sm","Paper","Avatar","LockOutlined","gutterBottom","autoFocus","label","error","onChange","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","disableFocusRipple","disableRipple","disableTouchRipple","VisibilityOff","Visibility","FormControlLabel","control","Checkbox","checked","Link","href","GitHub","LoginPage","RegisterForm","email","nickname","RegisterPage","mapLanguage","language","transformSnippetResponse","checkPlayerFinished","placements","playerId","some","elem","lobbyId","isHost","snippet","id","tokenCount","dateCreated","Date","isQueued","gameProgress","queuedPlayers","countdown","gameSlice","createGameAction","joinGameAction","wasQueued","newPlayerAction","percentCompleted","wpm","gameProgressAction","i","length","gameStartAction","playerFinishedAction","gameFinishedAction","nextGameAction","leaveGameAction","filter","lobbyClosedAction","selectState","game","selectIsHost","selectLobbyId","selectPlayerId","selectRaceContent","selectLangauge","selectGameProgress","selectQueuedPlayers","selectCountdown","selectPlacements","AceEditor","options","showGutter","highlightActiveLine","setOptions","useSoftTabs","BackgroundEditor","mode","readOnly","onLoad","editor","commands","commmandKeyBinding","textInput","getElement","disabled","renderer","$cursorLayer","element","style","displayIndentGuides","ForegroundEditor","focus","onBlur","ranges","useRef","markers","undefined","current","marker","session","removeMarker","newMarkers","addMarker","editor_ref","RaceField","reloaded","setFocus","foregroundText","setForegroundText","backgroundText","setBackgroundText","setMarkers","snippetArray","setSnippetArray","split","onClickCapture","e","playerText","playerTextArray","backgroundArray","playerLine","j","Range","snippetLine","differenceIndex","newLine","slice","createStyles","progress","finished","queued","green","grey","Progress","mx","LinearProgress","colorPrimary","barColorPrimary","UserProgress","progresses","useCallback","res","StatusBar","handleOpenLinkDialog","progressBarValue","Math","round","mr","CircularProgress","top","left","bottom","right","LinkDialog","handleClose","url","window","location","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","navigator","clipboard","writeText","DialogActions","LobbyClosedDialog","CustomGame","ws","showLink","setShowLink","showLobbyClosed","setShowLobbyClosed","setReloaded","raceContent","useParams","lobby","WebSocket","addEventListener","handleConnectedToWebsocket","handleNewMessage","send","JSON","stringify","message","parse","handleErrorResponse","handleCreateGameResponse","handleJoinGameResponse","handleNewPlayerResponse","handleGameProgressResponse","handleGameStartResponse","handlePlayerFinishedResponse","handleGameFinishedResponse","handleNextGameResponse","handleLeaveGameResponse","handleLobbyClosedResponse","console","log","handleLobbyClosedOpen","GitHubCallback","loggedIn","URLSearchParams","search","replaceState","replace","Title","document","title","App","firstTime","setFirstTime","CssBaseline","path","to","mapNumberToLanguage","mapGQLPracticeRaceToNewPracticeRace","practiceRace","typedSoFar","timeLimit","RACE_FIELD","fetchNewPracticeRace","raceFieldSlice","race","typedSoFarChanged","persistConfig","version","storage","whitelist","rootReducer","combineReducers","raceField","raceFieldReducer","userReducer","authReducer","gameReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persister","persistStore","ReactDOM","render","StrictMode","loading","persistor","getElementById"],"mappings":"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","file":"static/js/main.04e10883.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\nimport { cyan } from \"@material-ui/core/colors\";\n\nexport const theme = responsiveFontSizes(createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t\tprimary: cyan,\n\t\ttext: {\n\t\t\tprimary: '#fafafa', // mui grey 50\n\t\t\tsecondary: '#e0e0e0' // mui grey 300\n\t\t}\n\t},\n\ttypography: {\n\t\th1: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th2: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th3: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th4: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\th5: {\n\t\t\tfontFamily: [\n\t\t\t\t'\"Proxima Nova\"',\n\t\t\t\t'\"Helvetica\"',\n\t\t\t\t'-apple-system',\n\t\t\t\t'Arial',\n\t\t\t\t'sans-serif',\n\t\t\t].join(','),\n\t\t},\n\t\tfontFamily: [\n\t\t\t'\"Helvetica Neue\"',\n\t\t\t'-apple-system',\n\t\t\t'Arial',\n\t\t\t'sans-serif',\n\t\t].join(','),\n\t},\n}));\n","export const BACKEND_HOSTNAME = process.env.REACT_APP_BACKEND_HOSTNAME","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"../../app/store\";\nimport { UserRequest, UserState, UserResponse, UserStateGQLResponse } from \"./types\";\nimport { fetchUserDataGQL } from './graphql';\nimport { BACKEND_HOSTNAME } from \"../../config\";\n\nconst USER_SLICE_NAME = \"user\";\n\nexport const fetchUserData = createAsyncThunk<UserResponse, UserRequest>(\n\t`${USER_SLICE_NAME}/fetchUserData`,\n\tasync ({ userid }) => {\n\t\tconst response = await axios.post<UserStateGQLResponse>(\n\t\t\t`${BACKEND_HOSTNAME}/graphql`,\n\t\t\t{ query: fetchUserDataGQL, variables: { userid } }\n\t\t)\n\n\t\treturn response.data.data.user;\n\t}\n)\n\nconst initialState: UserState = {\n\tprofile: {\n\t\ttotalWordsTyped: 0,\n\t\tracesCompleted: 0,\n\t\tracesWon: 0,\n\t\tmaxTPM: 0,\n\t\taverageTPMAllTime: 0,\n\t\taverageTPMLast10: 0,\n\t},\n\tpreferences: {\n\t\tdisplayName: \"\",\n\t},\n\tstatus: 'idle',\n}\n\nconst userSlice = createSlice({\n\tname: USER_SLICE_NAME,\n\tinitialState,\n\treducers: {\n\t\tresetUser: state => {\n\t\t\tstate.profile = initialState.profile;\n\t\t\tstate.preferences = initialState.preferences;\n\t\t\tstate.status = initialState.status;\n\t\t}\n\t},\n\textraReducers: builder => {\n\t\tbuilder.addCase(fetchUserData.fulfilled, (state, action) => {\n\t\t\tstate.preferences = action.payload.preferences;\n\t\t\tstate.profile = action.payload.profile;\n\t\t\tstate.status = 'succeeded';\n\t\t});\n\t\tbuilder.addCase(fetchUserData.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(fetchUserData.rejected, state => {\n\t\t\tstate.preferences = initialState.preferences;\n\t\t\tstate.profile = initialState.profile;\n\t\t\tstate.status = 'failed';\n\t\t});\n\t},\n});\n\nexport default userSlice.reducer;\n\nexport const { resetUser } = userSlice.actions;\n\nexport const selectDisplayName = (state: RootState) => {\n\tif (state.auth.isLoggedIn) {\n\t\treturn state.user.preferences.displayName;\n\t}\n\treturn \"Guest\"\n}\n","// GraphQL query for getting a NewPracticeRace\nexport const fetchUserDataGQL = `\n\tquery fetchUserData($userid: String) {\n\t\tuser(userId: $userid) {\n\t\t\tpreferences {\n\t\t\t\tdisplayName\n\t\t\t}\n\t\t\tprofile {\n\t\t\t\taverageTPMAllTime\n\t\t\t\taverageTPMLast10\n\t\t\t\tmaxTPM\n\t\t\t\tracesCompleted\n\t\t\t\tracesWon\n\t\t\t\ttotalWordsTyped\n\t\t\t}\n\t\t}\n\t}\n`;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport { AuthState, JWTPayload, LoginBody, LoginResponse, LogoutBody, RefreshBody, RefreshResponse, RegisterBody, RegisterResponse } from \"./types\"\nimport jwtDecode from 'jwt-decode';\n\nimport axios from 'axios';\nimport { RootState } from \"../../app/store\";\nimport { resetUser } from \"../user/userSlice\";\nimport { BACKEND_HOSTNAME } from \"../../config\";\n\nconst AUTH_SLICE_NAME = \"auth\"\n\nexport const login = createAsyncThunk<LoginResponse, LoginBody>(\n\t`${AUTH_SLICE_NAME}/login`,\n\tasync body => {\n\t\tconst response = await axios.post<LoginResponse>(\n\t\t\t`${BACKEND_HOSTNAME}/auth/login`,\n\t\t\tbody\n\t\t)\n\t\treturn response.data;\n\t}\n);\n\n\nexport const githubCallback = createAsyncThunk<LoginResponse, URLSearchParams>(\n\t`${AUTH_SLICE_NAME}/githubCallback`,\n\tasync body => {\n\t\tconst response = await axios.get<LoginResponse>(\n\t\t\t`${BACKEND_HOSTNAME}/auth/githubCallback?${body.toString()}`,\n\t\t\t{ withCredentials: true }\n\t\t)\n\t\treturn response.data;\n\t}\n);\n\nexport const register = createAsyncThunk<RegisterResponse, RegisterBody>(\n\t`${AUTH_SLICE_NAME}/register`,\n\tasync body => {\n\t\tconst response = await axios.post<RegisterResponse>(\n\t\t\t`${BACKEND_HOSTNAME}/auth/register`,\n\t\t\tbody\n\t\t);\n\t\treturn response.data;\n\t}\n);\n\nexport const logout = createAsyncThunk<{}, LogoutBody>(\n\t`${AUTH_SLICE_NAME}/logout`,\n\tasync (body, thunkAPI)=> {\n\t\tawait axios.post<{}>(\n\t\t\t`${BACKEND_HOSTNAME}/auth/logout`,\n\t\t\tbody\n\t\t);\n\t\tthunkAPI.dispatch(resetUser());\n\t\treturn {};\n\t}\n)\n\nexport const refresh = createAsyncThunk<RefreshResponse, RefreshBody>(\n\t`${AUTH_SLICE_NAME}/refresh`,\n\tasync body => {\n\t\tconst response = await axios.post<RefreshResponse>(\n\t\t\t`${BACKEND_HOSTNAME}/auth/refresh`,\n\t\t\tbody\n\t\t);\n\t\treturn response.data;\n\t}\n)\n\nconst initialState: AuthState = {\n\taccessToken: \"\",\n\trefreshToken: \"\",\n\tstatus: 'idle',\n\tisLoggedIn: false,\n};\n\nexport const authSlice = createSlice({\n\tname: AUTH_SLICE_NAME,\n\tinitialState,\n\treducers: {\n\t\tresetStatus: state => {\n\t\t\tstate.status = 'idle'\n\t\t}\n\t},\n\textraReducers: builder => {\n\t\tbuilder.addCase(login.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(login.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(login.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t});\n\n\t\tbuilder.addCase(githubCallback.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(githubCallback.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(githubCallback.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t});\n\n\t\tbuilder.addCase(register.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(register.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(register.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t});\n\n\t\tbuilder.addCase(refresh.fulfilled, (state, action) => {\n\t\t\tstate.status = 'idle';\n\t\t\tstate.accessToken = action.payload.accessToken;\n\t\t\tstate.refreshToken = action.payload.refreshToken;\n\t\t\tstate.isLoggedIn = true;\n\t\t});\n\t\tbuilder.addCase(refresh.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(refresh.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t\tstate.accessToken = \"\";\n\t\t\tstate.refreshToken = \"\";\n\t\t\tstate.isLoggedIn = false;\n\t\t});\n\n\t\tbuilder.addCase(logout.fulfilled, state => {\n\t\t\tstate.accessToken = \"\";\n\t\t\tstate.refreshToken = \"\";\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.isLoggedIn = false;\n\t\t})\n\t\tbuilder.addCase(logout.pending, state => {\n\t\t\tstate.status = 'loading';\n\t\t});\n\t\tbuilder.addCase(logout.rejected, state => {\n\t\t\tstate.status = 'failed';\n\t\t})\n\t},\n});\n\nexport default authSlice.reducer;\n\nexport const { resetStatus } = authSlice.actions;\n\nexport const selectAccessToken = (state: RootState) => state.auth.accessToken;\nexport const selectRefreshToken = (state: RootState) => state.auth.refreshToken;\nexport const selectStatus = (state: RootState) => state.auth.status;\nexport const selectIsLoggedIn = (state: RootState) => state.auth.isLoggedIn;\n\nexport const selectUserID = (state:RootState) => {\n\tif (state.auth.accessToken) {\n\t\tconst accessToken = state.auth.accessToken;\n\t\tconst decoded = jwtDecode<JWTPayload>(accessToken);\n\t\treturn decoded.userid;\n\t}\n\treturn \"\";\n}\n","import React from 'react';\n\nimport { Box, Button, Grid, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport { logout, resetStatus, selectIsLoggedIn, selectRefreshToken } from '../auth/authSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDisplayName } from '../user/userSlice';\n\ninterface NavbarProps {\n\tisHome?: boolean\n}\n\nexport const Navbar = ({\n\tisHome = false\n}: NavbarProps): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\tconst isLoggedIn = useSelector(selectIsLoggedIn);\n\tconst refreshToken = useSelector(selectRefreshToken);\n\tconst displayName = useSelector(selectDisplayName)\n\n\tconst onLoginClick = () => {\n\t\thistory.push('/login');\n\t}\n\n\tconst onLogoutClick = () => {\n\t\tdispatch(logout({ refreshToken }));\n\t\tdispatch(resetStatus);\n\t\thistory.push('/');\n\t};\n\n\tconst onHomeClick = () => {\n\t\thistory.push('/');\n\t}\n\n\tconst heading = isLoggedIn ? \"Welcome back, \" + displayName : \"Playing as Guest\";\n\n\tconst loginLogoutButton = isLoggedIn ? (\n\t\t<Button variant='outlined' size='small' onClick={onLogoutClick}>Logout</Button>\n\t) : (\n\t\t<Button variant='outlined' size='small' onClick={onLoginClick}>Login</Button>\n\t)\n\n\treturn (\n\t\t<Grid container justify='space-between'>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<Box display='flex'>\n\t\t\t\t\t<Button variant='outlined' size='small' onClick={onHomeClick}>Home</Button>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<Box height='100%' display='flex' justifyContent='center' alignItems='center'>\n\t\t\t\t\t<Typography component='span' align=\"center\" color='textSecondary'>{heading}</Typography>\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3} justify='flex-end'>\n\t\t\t\t<Box display='flex' justifyContent='flex-end' alignContent='center'>\n\t\t\t\t\t{loginLogoutButton}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n","import { Box, Typography } from '@material-ui/core';\nimport React from 'react';\n\nexport const Footer = (): JSX.Element => {\n\treturn (\n\t\t<Box display='flex' width='100%' mt={4} justifyContent='center'>\n\t\t\t<Typography align='center' color='textSecondary'>Made with &#10084;&#65039; by Joseph and David</Typography>\n\t\t</Box>\n\t);\n}\n","import React from 'react';\nimport { useHistory } from 'react-router';\n\nimport { Box, Button, Container, Grid, makeStyles, Theme, Typography } from '@material-ui/core';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport { blurb } from './constants';\nimport { Navbar } from '../navbar/Navbar';\nimport { Footer } from '../footer/Footer';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n\ttitleIcon: {\n\t\tfontSize: theme.typography.h2.fontSize,\n\t\tmarginRight: 10\n\t}\n}));\n\nexport const MainMenu = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\n\tconst onCustomClick = () => {\n\t\thistory.push('/custom');\n\t}\n\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' py={5}>\n\t\t\t\t<Navbar isHome />\n\t\t\t\t<Box flexGrow={1}></Box>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Box display='flex' width='100%' justifyContent='center' alignItems='center' mb={2}>\n\t\t\t\t\t\t\t<KeyboardIcon className={classes.titleIcon} />\n\t\t\t\t\t\t\t<Typography component='span' variant='h3'> \n\t\t\t\t\t\t\t\tDevRacer\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container item xs={12}>\n\t\t\t\t\t\t<Typography variant='body1' align='center'>\n\t\t\t\t\t\t\t{blurb}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} spacing={3}>\n\t\t\t\t\t\t<Box display='flex' width='100%' justifyContent='center' mt={8}>\n\t\t\t\t\t\t\t<Button variant='contained' size='large' endIcon={<PersonIcon />} onClick={onCustomClick}>Start a Lobby</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Box flexGrow={2}></Box>\n\t\t\t\t<Footer />\n\t\t\t</Box>\n\t\t</Container>\n\t);\n}\n","\nexport const blurb = \"DevRacer is an online typing game inspired by TypeRacer. Type the most popular snippets from supported languages and increase your coding speed!\"\n","import React from 'react';\n\nimport { Box, TextField, TextFieldProps } from '@material-ui/core';\n\nexport const FormTextField = ({\n\t...props\n}: TextFieldProps): JSX.Element => (\n\t<Box width='100%'>\n\t\t<TextField \n\t\t\tvariant='outlined' \n\t\t\tmargin='normal'\n\t\t\tfullWidth\n\t\t\t{...props}\n\t\t/>\n\t</Box>\n)\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Avatar, Box, Button, Checkbox, FormControlLabel, Grid, IconButton, InputAdornment, Link, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { LockOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { red } from '@material-ui/core/colors';\n\nimport { FormTextField } from './FormTextField';\nimport { login, resetStatus, selectStatus } from './authSlice';\nimport { useHistory } from 'react-router';\n\nimport { GitHub } from '@material-ui/icons';\nimport { BACKEND_HOSTNAME } from '../../config';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: red[400]\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2)\n\t},\n\toauthIcons: {\n\t\tcolor: theme.palette.text.secondary\n\t}\n}));\n\ninterface FormState {\n\tusername: string;\n\tpassword: string;\n\trememberMe: boolean;\n}\n\nexport const LoginForm = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\tconst [formState, setFormState] = useState<FormState>({\n\t\tusername: '',\n\t\tpassword: '',\n\t\trememberMe: false,\n\t});\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst status = useSelector(selectStatus);\n\n\t// reset it on load too\n\tuseEffect(() => {\n\t\tdispatch(resetStatus());\n\t\treturn () => {\n\t\t\tdispatch(resetStatus());\n\t\t}\n\t}, [dispatch]);\n\n\t// TODO: BUG WITH THIS - SOMETIMES IT WILL COME IN AS SUCCEEDED (NAMELY AFTER LOGGING OUT)\n\tuseEffect(() => {\n\t\tif (status === 'succeeded') {\n\t\t\thistory.push('/');\n\t\t\tdispatch(resetStatus());\n\t\t}\n\t}, [dispatch, history, status])\n\n\tconst handleClickShowPassword = () => {\n\t\tsetShowPassword(prev => !prev);\n\t}\n\n\tconst handleClickRememberMe = () => {\n\t\tsetFormState(prev => ({ ...prev, rememberMe: !prev.rememberMe }));\n\t}\n\n\tconst handleChange = (key: keyof FormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetFormState(prev => ({ ...prev, [key]: event.target.value }));\n\t}\n\n\tconst handleSubmit = () => {\n\t\tdispatch(login(formState));\n\t}\n\n\tconst handleRegister = () => {\n\t\thistory.push('/register');\n\t}\n\n\treturn (\n\t\t<Grid container justify='center'>\n\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Box py={5} mt={4}>  { /* because footer also has mt={4} */}\n\t\t\t\t\t\t<Grid container justify='center'>\n\t\t\t\t\t\t\t<Grid item xs={10} sm={8}>\n\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='column' alignItems='center' width='100%'>\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t\t\t\t\t<LockOutlined />\n\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" align='center' gutterBottom>Sign in</Typography>\n\t\t\t\t\t\t\t\t\t<Box width='100%' mt={2}>\n\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.username}\n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('username')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField\n\t\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.password}\n\t\t\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\n\t\t\t\t\t\t\t\t\t\t\thelperText={status === 'failed' ? 'The username and password were incorrect' : ''}\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showPassword ? <VisibilityOff /> : <Visibility />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} />\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={(\n\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={formState.rememberMe}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickRememberMe}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Remember me\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t\t\t\t\t\t\t\t<Link variant=\"body2\" onClick={handleRegister}>\n\t\t\t\t\t\t\t\t\t\t\t\tDon't have an account? Sign Up\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t<Box mt={4} display=\"flex\" flexDirection=\"column\" alignItems='center' width='100%'>\n\t\t\t\t\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>or you can sign in with</Typography>\n\t\t\t\t\t\t\t\t\t\t<IconButton href={`${BACKEND_HOSTNAME}/auth/githubLogin`}><GitHub className={classes.oauthIcons}/></IconButton>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import { Box, Container } from '@material-ui/core';\nimport React from 'react';\nimport { Footer } from '../footer/Footer';\nimport { Navbar } from '../navbar/Navbar';\nimport { LoginForm } from './LoginForm';\n\nexport const LoginPage = (): JSX.Element => {\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' justifyContent='space-between' py={5}>\n\t\t\t\t<Navbar />\n\t\t\t\t<LoginForm />\n\t\t\t\t<Footer />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Avatar, Box, Button, Grid, IconButton, InputAdornment, Link, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { LockOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { red } from '@material-ui/core/colors';\n\nimport { FormTextField } from './FormTextField';\nimport { register, resetStatus, selectStatus } from './authSlice';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles<Theme>(theme => ({\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: red[400]\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2)\n\t}\n}));\n\ninterface FormState {\n\tusername: string;\n\tpassword: string;\n\temail: string;\n\tnickname: string;\n}\n\nexport const RegisterForm = (): JSX.Element => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst classes = useStyles();\n\tconst [formState, setFormState] = useState<FormState>({\n\t\tusername: '',\n\t\tpassword: '',\n\t\temail: '',\n\t\tnickname: '',\n\t});\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst status = useSelector(selectStatus);\n\n\tuseEffect(() => {\n\t\tdispatch(resetStatus());\n\t\treturn () => {\n\t\t\tdispatch(resetStatus());\n\t\t}\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tif (status === 'succeeded')  {\n\t\t\tdispatch(resetStatus());\n\t\t\thistory.push('/');\n\t\t} \n\t}, [dispatch, history, status]);\n\n\tconst handleClickShowPassword = () => {\n\t\tsetShowPassword(prev => !prev);\n\t}\n\n\tconst handleChange = (key: keyof FormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetFormState(prev => ({ ...prev, [key]: event.target.value }));\n\t}\n\n\tconst handleSubmit = () => {\n\t\tdispatch(register(formState));\n\t}\n\n\tconst handleLogin = () => {\n\t\tdispatch(resetStatus());\n\t\thistory.push('/login');\n\t}\n\t\n\treturn (\n\t\t<Grid container justify='center'>\n\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<Box py={5} mt={4}>  { /* because footer also has mt={4} */} \n\t\t\t\t\t\t<Grid container justify='center'>\n\t\t\t\t\t\t\t<Grid item xs={10} sm={8}>\n\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='column' alignItems='center' width='100%'>\n\t\t\t\t\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t\t\t\t\t<LockOutlined />\n\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h4\" align='center' gutterBottom>Register</Typography>\n\t\t\t\t\t\t\t\t\t<Box width='100%' mt={2}>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tautoFocus \n\t\t\t\t\t\t\t\t\t\t\tlabel='Username' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.username} \n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('username')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tlabel='Password' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.password}\n\t\t\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('password')}\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClickShowPassword}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableFocusRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{showPassword ? <VisibilityOff /> : <Visibility />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tlabel='Email' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.email} \n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('email')}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormTextField \n\t\t\t\t\t\t\t\t\t\t\tlabel='Nickname' \n\t\t\t\t\t\t\t\t\t\t\tvalue={formState.nickname} \n\t\t\t\t\t\t\t\t\t\t\terror={status === 'failed'}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('nickname')}\n\t\t\t\t\t\t\t\t\t\t\thelperText={status === 'failed' ? 'The username or email has already been taken.' : ''}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Box display='flex' flexDirection='row-reverse'>\n\t\t\t\t\t\t\t\t\t\t\t<Link variant=\"body2\" onClick={handleLogin}>\n\t\t\t\t\t\t\t\t\t\t\t\tAlready have an account? Log In\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import { Box, Container } from '@material-ui/core';\nimport React from 'react';\nimport { Footer } from '../footer/Footer';\nimport { Navbar } from '../navbar/Navbar';\nimport { RegisterForm } from './RegisterForm';\n\nexport const RegisterPage = (): JSX.Element => {\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' justifyContent='space-between' py={5}>\n\t\t\t\t<Navbar />\n\t\t\t\t<RegisterForm />\n\t\t\t\t<Footer />\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\n","import { language, SnippetResponse, SnippetState } from \"./types\";\n\nconst mapLanguage = (language: number): language => {\n\tswitch (language) {\n\t\tcase 1:\n\t\t\treturn 'c_cpp';\n\t\tcase 2:\n\t\t\treturn 'golang';\n\t\tcase 3:\n\t\t\treturn 'javascript';\n\t\tcase 4:\n\t\t\treturn 'python';\n\t\tdefault:\n\t\t\treturn 'plain_text';\n\t}\n}\n\nexport const transformSnippetResponse = (response: SnippetResponse): SnippetState => {\n\treturn {\n\t\t...response,\n\t\tlanguage: mapLanguage(response.language)\n\t}\n}\n\nexport const checkPlayerFinished = (placements: string[], playerId: string): boolean => {\n\treturn placements.some(elem => elem === playerId);\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { \n\tCreateGameResponse, \n\tGameFinishedResponse, \n\tGameProgress, \n\tGameProgressResponse, \n\tGameStartResponse, \n\tGameState, \n\tJoinGameResponse, \n\tLeaveGameResponse, \n\tLobbyClosedResponse, \n\tNewPlayerResponse, \n\tNextGameResponse, \n\tPlayerFinishedResponse \n} from \"./types\";\nimport { transformSnippetResponse } from \"./utils\";\n\n// redux prefix for this slice\nconst GAME_SLICE_NAME = 'game';\n\nconst initialState: GameState = {\n\tplayerId: '',\n\tlobbyId: '',\n\tisHost: false,\n\tstate: 'waiting',\n\tsnippet: {\n\t\tid: '',\n\t\tsnippet: '',\n\t\ttokenCount: 0,\n\t\tlanguage: 'plain_text',\n\t\tdateCreated: new Date(),\n\t},\n\tisQueued: false,\n\tgameProgress: [],\n\tqueuedPlayers: [],\n\tplacements: [],\n\tcountdown: 0,\n}\n\nconst gameSlice = createSlice({\n\tname: GAME_SLICE_NAME,\n\tinitialState,\n\treducers: {\n\t\tcreateGameAction: (state, action: PayloadAction<CreateGameResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tstate.state = 'waiting';\n\t\t\tstate.isHost = true;\n\t\t\tstate.playerId = payload.playerId;\n\t\t\tstate.lobbyId = payload.lobbyId;\n\t\t\tstate.snippet = transformSnippetResponse(payload.snippet);\n\t\t},\n\t\tjoinGameAction: (state, action: PayloadAction<JoinGameResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tstate.state = 'waiting';\n\t\t\tstate.playerId = payload.playerId;\n\t\t\tstate.snippet = transformSnippetResponse(payload.snippet);\n\t\t\tstate.gameProgress = payload.gameProgress;\n\t\t\tstate.queuedPlayers = payload.queuedPlayers;\n\t\t\tstate.placements = payload.placements;\n\t\t\tstate.isQueued = payload.wasQueued;\n\t\t},\n\t\tnewPlayerAction: (state, action: PayloadAction<NewPlayerResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tconst gameProgress: GameProgress = {\n\t\t\t\tplayerId: payload.playerId,\n\t\t\t\tdisplayName: payload.displayName,\n\t\t\t\tpercentCompleted: payload.percentCompleted,\n\t\t\t\twpm: 0,\n\t\t\t}\n\t\t\tif (payload.wasQueued) {\n\t\t\t\tstate.queuedPlayers.push(gameProgress);\n\t\t\t} else {\n\t\t\t\tstate.gameProgress.push(gameProgress)\n\t\t\t}\n\t\t},\n\t\tgameProgressAction: (state, action: PayloadAction<GameProgressResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\t// should only update the game progress if they are actually particpating in the game\n\t\t\tfor (let i = 0; i < state.gameProgress.length; i++) {\n\t\t\t\tif (state.gameProgress[i].playerId === payload.playerId) {\n\t\t\t\t\tstate.gameProgress[i].percentCompleted = payload.percentCompleted;\n\t\t\t\t\tstate.gameProgress[i].wpm = payload.wpm;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgameStartAction: (state, action: PayloadAction<GameStartResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tif (payload.countdown === 0) {\n\t\t\t\tstate.state = 'inProgress'\n\t\t\t} else {\n\t\t\t\tstate.state = 'countdown'\n\t\t\t}\n\t\t\tstate.countdown = payload.countdown;\n\t\t},\n\t\tplayerFinishedAction: (state, action: PayloadAction<PlayerFinishedResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tstate.placements = payload.placements;\n\t\t},\n\t\tgameFinishedAction: (state, action: PayloadAction<GameFinishedResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tstate.state = 'finished';\n\t\t\tstate.placements = payload.placements;\n\t\t},\n\t\tnextGameAction: (state, action: PayloadAction<NextGameResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tstate.state = 'waiting';\n\t\t\tstate.snippet = transformSnippetResponse(payload.snippet);\n\t\t\tstate.gameProgress = payload.gameProgress;\n\t\t\tstate.queuedPlayers = payload.queuedPlayers;\n\t\t\tstate.placements = payload.placements;\n\t\t\tstate.isQueued = false;\n\t\t},\n\t\tleaveGameAction: (state, action: PayloadAction<LeaveGameResponse>) => {\n\t\t\tconst payload = action.payload;\n\t\t\tstate.placements = payload.placements;\n\t\t\tstate.gameProgress = state.gameProgress.filter(elem => elem.playerId !== payload.playerId);\n\t\t\tstate.queuedPlayers = state.queuedPlayers.filter(elem => elem.playerId !== payload.playerId);\n\t\t},\n\t\tlobbyClosedAction: (state, action: PayloadAction<LobbyClosedResponse>) => {\n\t\t\treturn initialState;\n\t\t}\n\t},\n})\n\nexport default gameSlice.reducer;\n\nexport const { \n\tcreateGameAction, \n\tgameFinishedAction,\n\tgameProgressAction, \n\tgameStartAction, \n\tjoinGameAction, \n\tleaveGameAction,\n\tlobbyClosedAction,\n\tplayerFinishedAction, \n\tnewPlayerAction,\n\tnextGameAction,\n} = gameSlice.actions;\n\nexport const selectState = (state: RootState) => state.game.state;\nexport const selectIsHost = (state: RootState) => state.game.isHost;\nexport const selectLobbyId = (state: RootState) => state.game.lobbyId;\nexport const selectPlayerId = (state: RootState) => state.game.playerId;\n\nexport const selectRaceContent = (state: RootState) => state.game.snippet.snippet;\nexport const selectLangauge = (state: RootState) => state.game.snippet.language;\nexport const selectGameProgress = (state: RootState) => state.game.gameProgress;\nexport const selectQueuedPlayers = (state: RootState) => state.game.queuedPlayers;\nexport const selectCountdown = (state: RootState) => state.game.countdown;\nexport const selectPlacements = (state: RootState) => state.game.placements;\n","import React from 'react';\n\nimport AceEditorComponent, { IAceEditorProps, IAceOptions } from \"react-ace\";\n\nimport \"./editor.css\"\n\n// all currently supported languages\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/mode-golang\";\nimport \"ace-builds/src-noconflict/mode-plain_text\";\n\n// currently supported themes\nimport \"ace-builds/src-noconflict/theme-dracula\";\n\n// just a simple implementation for now\ninterface AceEditorProps extends IAceEditorProps {\n\tvalue?: string\n\tclassName? : string\n\toptions?: IAceOptions;\n}\n\nexport const AceEditor = ({ value = \"\", className = \"\", options = {}, ...props }: AceEditorProps): JSX.Element => {\n\treturn (\n\t\t<AceEditorComponent \n\t\t\tclassName={\"aceEditor \" + className}\n\t\t\tvalue={value}\n\t\t\ttheme=\"dracula\"\n\t\t\tshowGutter={false}\n\t\t\thighlightActiveLine={false}\n\t\t\tfontSize={13}\n\t\t\tsetOptions={{\n\t\t\t\tuseSoftTabs: false,\n\t\t\t\t...options\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n","import React from 'react'\nimport { Ace } from 'ace-builds';\nimport { AceEditor } from './AceEditor';\n\ninterface BackgroundEditorProps {\n\ttext?: string;\n}\n\nexport const BackgroundEditor = ({\n\ttext = \"\",\n}: BackgroundEditorProps): JSX.Element => {\n\n\tconst handleLoad = (editor: Ace.Editor) => {\n\t\t// settings to make the text editor look like it's disabled, some of the things are\n\t\t// not yet supported in typescript so have to ignore them\n\t\t// editor.getSession().selection.on('changeSelection', function ()\n\t\t// {\n\t\t// \teditor.getSession().selection.clearSelection();\n\t\t// });\n\t\t// @ts-ignore\n\t\teditor.commands.commmandKeyBinding={}\n\t\t// @ts-ignore\n\t\teditor.textInput.getElement().disabled=true\n\t\t// @ts-ignore\n\t\teditor.renderer.$cursorLayer.element.style.display = \"none\";\n\t}\n\n\treturn (\n\t\t<AceEditor \n\t\t\tmode='plain_text'\n\t\t\tclassName='backgroundEditor'\n\t\t\tvalue={text}\n\t\t\treadOnly={true}\n\t\t\tonLoad={handleLoad}\n\t\t\toptions={{\n\t\t\t\tdisplayIndentGuides: false,\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import React, { useEffect, useRef } from 'react';\nimport { Ace } from 'ace-builds';\n\nimport { AceEditor } from './AceEditor';\nimport { language } from './types';\n\nimport \"./editor.css\"\n\ninterface ForegroundEditorProps {\n\tlanguage?: language;\n\tdisabled?: boolean;\n\tfocus?: boolean;\n\ttext: string;\n\tranges: Ace.Range[];\n\tonChange: (s: string) => void;\n\tonBlur?: () => void;\n}\n\nexport const ForegroundEditor = ({\n\tlanguage = 'plain_text',\n\tfocus = false,\n\tdisabled = false,\n\tonBlur,\n\tranges,\n\tonChange,\n\ttext\n}: ForegroundEditorProps): JSX.Element => {\n\tconst editor = useRef<Ace.Editor>();\n\tconst markers = useRef<number[]>([]);\n\t\n\tuseEffect(() => {\n\t\tif (editor.current !== undefined){\n\t\t\tfor (let marker of markers.current){\n\t\t\t\teditor.current.session.removeMarker(marker);\n\t\t\t}\n\n\t\t\tlet newMarkers: number[] = [];\n\t\t\tfor (let marker of ranges){\n\t\t\t\tnewMarkers.push(editor.current.session.addMarker(marker, \"error-marker\", \"text\"));\n\t\t\t}\n\t\t\tmarkers.current = newMarkers;\n\t\t}\n\t}, [ranges])\n\n\tuseEffect(() => {\n\t\tif (editor && focus) {\n\t\t\teditor.current?.focus();\n\t\t}\n\t}, [editor, focus])\n\n\tconst handleLoad = (editor_ref: Ace.Editor) => {\n\t\teditor.current = editor_ref;\n\t}\n\n\treturn (\n\t\t<AceEditor  \n\t\t\tclassName=\"foregroundEditor\"\n\t\t\tmode={language}\n\t\t\tonLoad={handleLoad}\n\t\t\tonBlur={onBlur}\n\t\t\tonChange={onChange}\n\t\t\tvalue={text}\n\t\t\treadOnly={disabled}\n\t\t/>\n\t);\n}\n","import React, { SyntheticEvent, useEffect, useState } from 'react'\nimport { Ace, Range } from 'ace-builds';\n\nimport { Box } from '@material-ui/core';\n\nimport { BackgroundEditor } from './BackgroundEditor';\nimport { ForegroundEditor } from './ForegroundEditor';\nimport { language } from '../game/types';\n\ninterface RaceFieldProps {\n\tsnippet?: string;\n\tlanguage?: language;\n\tdisabled?: boolean;\n\treloaded: boolean;\n\tonChange: (text: string) => void;\n}\n\nexport const RaceField = ({ \n\tsnippet = '', \n\tlanguage = 'plain_text' ,\n\tdisabled = false,\n\treloaded,\n\tonChange = (text: string) => {},\n}: RaceFieldProps): JSX.Element => {\n\tconst [focus, setFocus] = useState(false);\n\tconst [foregroundText, setForegroundText] = useState(\"\");\n\tconst [backgroundText, setBackgroundText] = useState(\"\");\n\tconst [markers, setMarkers] = useState<Ace.Range[]>([]);\n\tconst [snippetArray, setSnippetArray] = useState<string[]>([]);\n\n\tuseEffect(() => {\n\t\tsetSnippetArray(snippet.split('\\n'));\n\t\tsetBackgroundText(snippet);\n\t\tsetForegroundText('');\n\t}, [snippet, reloaded])\n\n\tconst onFocus = (e: SyntheticEvent) => {\n\t\tsetFocus(true);\n\t}\n\n\tconst onBlur = () => {\n\t\tsetFocus(false);\n\t}\n\n\tconst handleChange = (playerText: string) => {\n\t\tconst playerTextArray = playerText.split(\"\\n\");\n\n\t\tconst backgroundArray: string[] = [];\n\t\tconst newMarkers: Ace.Range[] = [];\n\n\t\tlet i = 0;\n\t\t// compare text\n\t\tfor (; i < playerTextArray.length; i++) {\n\t\t\tlet playerLine = playerTextArray[i];\n\n\t\t\t// if no line in snippet to compare with, the rest of text is wrong. mark wrong for each line\n\t\t\tif (i > snippetArray.length - 1) {\n\t\t\t\tfor (let j = i; j < playerTextArray.length; j++) {\n\t\t\t\t\tnewMarkers.push(new Range(j, 0, j, playerLine.length));\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t// compare with line in snippet\n\t\t\tlet snippetLine = snippetArray[i];\n\t\t\tlet differenceIndex = 0;\n\t\t\twhile (playerLine[differenceIndex] === snippetLine[differenceIndex] && differenceIndex < playerLine.length) differenceIndex++;\n\n\t\t\tif (differenceIndex < playerLine.length) {\n\t\t\t\tnewMarkers.push(new Range(i, differenceIndex, i, playerLine.length));\n\t\t\t}\n\t\t\t\n\t\t\tlet newLine = \"\";\n\t\t\tfor (let i = 0; i < playerLine.length; i++) {\n\t\t\t\tif (playerLine[i] === '\\t') {\n\t\t\t\t\tnewLine += '\\t';\n\t\t\t\t} else {\n\t\t\t\t\tnewLine += ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tsnippetLine = newLine + snippetLine.slice(differenceIndex)\n\t\t\tbackgroundArray.push(snippetLine)\n\t\t}\n\n\t\t// if player_text was shorter than snippet, push rest of snippet into the background.\n\t\tfor (; i < snippetArray.length; i++) {\n\t\t\tbackgroundArray.push(snippetArray[i]);\n\t\t}\n\n\t\tsetBackgroundText(backgroundArray.join(\"\\n\"));\n\t\tsetMarkers(newMarkers);\n\t\tif (foregroundText !== playerText) setForegroundText(playerText);\n\t\tonChange(playerText);\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\t// onKeyDownCapture={filterKeyboardEvents}\n\t\t\t// onKeyPressCapture={filterKeyboardEvents}\n\t\t\t// onKeyUpCapture={filterKeyboardEvents}\n\t\t\tonClickCapture={onFocus}>\n\t\t\t{/* onMouseDownCapture={filterMouseEvents}\n\t\t\tonMouseMoveCapture={filterMouseEvents}\n\t\t\tonFocusCapture={filterMouseEvents}\n\t\t\tonChangeCapture={filterMouseEvents}\n\t\t\tonBlurCapture={filterMouseEvents}\n\t\t\tonMouseUpCapture={filterMouseEvents}> */}\n\t\t\t<BackgroundEditor text={backgroundText} />\n\t\t\t{/* elements that appear later are on top */}\n\t\t\t<ForegroundEditor \n\t\t\t\tlanguage={language} \n\t\t\t\ttext={foregroundText} \n\t\t\t\tranges={markers} \n\t\t\t\tfocus={focus} \n\t\t\t\tonChange={handleChange} \n\t\t\t\tonBlur={onBlur} \n\t\t\t\tdisabled={disabled}\n\t\t\t/>\n\t\t</Box>\n\t)\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Box, createStyles, LinearProgress, makeStyles, Theme, Typography } from '@material-ui/core';\nimport { green, grey } from '@material-ui/core/colors';\n\nimport { selectPlacements } from './gameSlice';\nimport { GameProgress } from './types';\nimport { checkPlayerFinished } from './utils';\n\n\ninterface StyleProps {\n\tqueued: boolean;\n\tfinished: boolean;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => createStyles({\n\tprogress: ({ finished, queued }) => {\n\t\tif (finished) {\n\t\t\treturn {\n\t\t\t\tbackgroundColor: green[500],\n\t\t\t\twidth: '100%',\n\t\t\t}\n\t\t} \n\t\tif (queued) {\n\t\t\treturn {\n\t\t\t\tbackgroundColor: grey[800],\n\t\t\t\twidth: '100%',\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\twidth: '100%',\n\t\t}\n\t},\n\ttypography: ({ queued }) => {\n\t\tif (queued) {\n\t\t\treturn {\n\t\t\t\tcolor: grey[400],\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n}));\n\ninterface ProgressProps {\n\tprogress: GameProgress;\n\tqueued?: boolean;\n}\n\nexport const Progress = ({ progress, queued = false }: ProgressProps): JSX.Element => {\n\tconst placements = useSelector(selectPlacements);\n\n\tconst finished = checkPlayerFinished(placements, progress.playerId);\n\tconst classes = useStyles({ finished, queued });\n\n\tconst value = finished ? 100 : progress.percentCompleted * 100;\n\n\treturn (\n\t\t<Box display='flex'alignItems='center' mb={1} width='100%'>\n\t\t\t<Typography variant='caption' className={classes.typography}>{progress.displayName}</Typography>\n\t\t\t<Box display='flex' flexGrow={1} mx={1}>\n\t\t\t\t<LinearProgress \n\t\t\t\t\tvariant='determinate' \n\t\t\t\t\tvalue={value} \n\t\t\t\t\tclasses={{ colorPrimary: classes.progress, barColorPrimary: classes.progress }}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Typography variant='caption' align='right' className={classes.typography}>{progress.wpm} wpm</Typography>\n\t\t</Box>\n\t)\n}\n","import React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux'\n\nimport { Box } from '@material-ui/core'\n\nimport { selectGameProgress, selectQueuedPlayers } from './gameSlice';\nimport { Progress } from './Progress';\n\nexport const UserProgress = (): JSX.Element => {\n\tconst progress = useSelector(selectGameProgress);\n\tconst queuedPlayers = useSelector(selectQueuedPlayers);\n\n\tconst progresses = useCallback(() => {\n\t\tlet res: JSX.Element[] = [];\n\t\tfor (let i = 0; i < progress.length; i++) {\n\t\t\tres.push(<Progress progress={progress[i]} />)\n\t\t}\n\t\tfor (let i = 0; i < queuedPlayers.length; i++) {\n\t\t\tres.push(<Progress progress={queuedPlayers[i]} queued />)\n\t\t}\n\t\treturn res;\n\t}, [progress, queuedPlayers]);\n\n\treturn (\n\t\t<Box width='100%'>\n\t\t\t{progresses()}\n\t\t</Box>\n\t);\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Box, CircularProgress, Grid, IconButton, Typography } from '@material-ui/core';\nimport LinkIcon from '@material-ui/icons/Link';\n\nimport { selectCountdown, selectIsHost, selectState } from './gameSlice';\n\nconst COUNTDOWN_START = 5;\n\ninterface StatusBarProps {\n\thandleOpenLinkDialog: () => void;\n}\n\nexport const StatusBar = ({ handleOpenLinkDialog }: StatusBarProps): JSX.Element => {\n\tconst state = useSelector(selectState);\n\tconst isHost = useSelector(selectIsHost);\n\tconst countdown = useSelector(selectCountdown);\n\n\tconst progressBarValue = countdown === 0 ? 100 : Math.round(COUNTDOWN_START - countdown / COUNTDOWN_START * 100);\n\n\tlet status = '';\n\tif (state === 'waiting') {\n\t\tif (isHost) {\n\t\t\tstatus = 'The lobby is ready. Feel free to start the game whenever you want.';\n\t\t} else {\n\t\t\tstatus = 'The lobby is ready. Please wait for the host to start the game.';\n\t\t}\n\t} else if (state === 'countdown') {\n\t\tstatus = 'Get ready! The game is starting.'\n\t} else if (state === 'inProgress') {\n\t\tstatus = 'The game is in progress!';\n\t} else if (state === 'finished') {\n\t\tif (isHost) {\n\t\t\tstatus = 'The race is finished! Please fetch the next game.';\n\t\t} else {\n\t\t\tstatus = 'The race is finished! Please wait for the host to move onto the next game.';\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container justify='space-between' alignItems='center' spacing={1}>\n\t\t\t<Grid item>\n\t\t\t\t<IconButton onClick={handleOpenLinkDialog}>\n\t\t\t\t\t<LinkIcon />\n\t\t\t\t</IconButton>\n\t\t\t</Grid>\n\t\t\t<Grid item>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<Box mr={1}>\n\t\t\t\t\t\t<Typography component='span' variant='caption'>{status}</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t{state === 'countdown' ? (\n\t\t\t\t\t\t<Box position=\"relative\" display=\"inline-flex\">\n\t\t\t\t\t\t\t<CircularProgress variant=\"determinate\" value={progressBarValue} size={30} />\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\ttop={0}\n\t\t\t\t\t\t\t\tleft={0}\n\t\t\t\t\t\t\t\tbottom={0}\n\t\t\t\t\t\t\t\tright={0}\n\t\t\t\t\t\t\t\tposition=\"absolute\"\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{countdown}</Typography>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t) : null}\n\t\t\t\t</Box>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { \n\tButton, \n\tDialog, \n\tDialogActions, \n\tDialogContent, \n\tDialogContentText, \n\tDialogProps, \n\tDialogTitle, \n\tIconButton, \n\tInputAdornment, \n\tTextField \n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { selectLobbyId } from '../gameSlice';\n\ninterface LinkDialogProps extends DialogProps {\n\thandleClose?: () => void;\n}\n\nexport const LinkDialog = ({\n\thandleClose = () => {},\n\t...props\n}: LinkDialogProps) => {\n\tconst lobbyId = useSelector(selectLobbyId);\n\tconst url = `${window.location.href}/${lobbyId}`;\n\n\tconst handleCopyClick = () => {\n\t\tnavigator.clipboard.writeText(url);\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"responsive-dialog-title\"\n\t\t>\n\t\t<DialogTitle id=\"responsive-dialog-title\">{\"Invite your friends\"}</DialogTitle>\n\t\t<DialogContent>\n\t\t\t<DialogContentText gutterBottom>\n\t\t\t\tCopy the link below and send it to your friends to have them join you in this race!\n\t\t\t</DialogContentText>\n\t\t\t<TextField \n\t\t\t\tvalue={url} \n\t\t\t\tvariant='outlined' \n\t\t\t\tfullWidth \n\t\t\t\tInputProps={{\n\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t<IconButton onClick={handleCopyClick}>\n\t\t\t\t\t\t\t\t<FileCopyIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t/>\n\t\t</DialogContent>\n\t\t<DialogActions>\n\t\t\t<Button autoFocus onClick={handleClose} color=\"primary\">\n\t\t\t\tClose\n\t\t\t</Button>\n\t\t</DialogActions>\n\t </Dialog>\n\t)\n}\n","import React from 'react';\n\nimport { \n\tButton, \n\tDialog, \n\tDialogActions, \n\tDialogContent, \n\tDialogContentText, \n\tDialogProps, \n\tDialogTitle, \n} from '@material-ui/core';\n\ninterface LinkDialogProps extends DialogProps {\n\thandleClose?: () => void;\n}\n\nexport const LobbyClosedDialog = ({\n\thandleClose = () => {},\n\t...props\n}: LinkDialogProps) => {\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"responsive-dialog-title\"\n\t\t>\n\t\t\t<DialogTitle id=\"responsive-dialog-title\">Lobby closed</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText gutterBottom>\n\t\t\t\t\tThe lobby has closed because the host left the game. \n\t\t\t\t\tFeel free to join another lobby or practice on your own!\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button autoFocus onClick={handleClose} color=\"primary\">\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t)\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\n\nimport { Box, Button, Container, Grid } from '@material-ui/core';\n\nimport * as CONSTANTS from './constants'\nimport { \n\tCreateGameResponse, \n\tErrorResponse, \n\tGameFinishedResponse, \n\tGameProgressResponse, \n\tGameStartResponse, \n\tJoinGameResponse, \n\tLeaveGameResponse, \n\tLobbyClosedResponse, \n\tNewPlayerResponse, \n\tNextGameResponse, \n\tPlayerFinishedResponse \n} from '../types';\nimport { \n\tcreateGameAction, \n\tgameFinishedAction,\n\tgameProgressAction, \n\tgameStartAction, \n\tjoinGameAction, \n\tleaveGameAction, \n\tlobbyClosedAction, \n\tnewPlayerAction, \n\tnextGameAction, \n\tplayerFinishedAction, \n\tselectIsHost, \n\tselectLangauge, \n\tselectPlacements, \n\tselectPlayerId, \n\tselectRaceContent, \n\tselectState \n} from '../gameSlice';\nimport { Footer } from '../../footer/Footer';\nimport { Navbar } from '../../navbar/Navbar';\nimport { RaceField } from '../../race-text-field/RaceField';\nimport { selectDisplayName } from '../../user/userSlice';\n\nimport \"../../race-text-field/editor.css\"\nimport { UserProgress } from '../UserProgress';\nimport { StatusBar } from '../StatusBar';\nimport { LinkDialog } from './LinkDialog';\nimport { LobbyClosedDialog } from './LobbyClosedDialog';\nimport { checkPlayerFinished } from '../utils';\n\ninterface MatchParams {\n\tlobby?: string;\n}\n\nexport const CustomGame = (): JSX.Element => {\n\tconst ws = useRef<WebSocket | undefined>(undefined);\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\n\tconst [showLink, setShowLink] = useState(false);\n\tconst [showLobbyClosed, setShowLobbyClosed] = useState(false);\n\tconst [reloaded, setReloaded] = useState(true);\n\n\tconst displayName = useSelector(selectDisplayName);\n\tconst raceContent = useSelector(selectRaceContent);\n\tconst language = useSelector(selectLangauge);\n\tconst isHost = useSelector(selectIsHost);\n\tconst state = useSelector(selectState);\n\tconst playerId = useSelector(selectPlayerId);\n\tconst placements = useSelector(selectPlacements);\n\t\n\tconst { lobby: lobbyId } = useParams<MatchParams>();\n\n\t// connect to websocket\n\tuseEffect(() => {\n\t\tws.current = new WebSocket(`${process.env.REACT_APP_BACKEND_WEBSOCKET_HOSTNAME}/custom?name=${displayName}`);\n\t\tws.current?.addEventListener('open', handleConnectedToWebsocket);\n\t\tws.current?.addEventListener('message', event => handleNewMessage(event))\n\t\treturn () => {\n\t\t\tws.current?.send(JSON.stringify({\n\t\t\t\taction: CONSTANTS.LEAVE_GAME_ACTION,\n\t\t\t}));\n\t\t}\n\t// eslint-disable-next-line\n\t}, []); \n\n\tconst handleConnectedToWebsocket = () => {\n\t\tif (lobbyId) {\n\t\t\tws.current?.send(JSON.stringify({\n\t\t\t\taction: CONSTANTS.JOIN_GAME_ACTION,\n\t\t\t\tlobbyId: lobbyId,\n\t\t\t}));\n\t\t} else {\n\t\t\tws.current?.send(JSON.stringify({\n\t\t\t\taction: CONSTANTS.CREATE_GAME_ACTION,\n\t\t\t}));\n\t\t}\n\t}\n\n\tconst handleNewMessage = (event: MessageEvent) => {\n\t\tconst message: { action: string, payload: any } = JSON.parse(event.data)\n\t\tswitch (message.action) {\n\t\t\tcase CONSTANTS.ERROR_RESPONSE:\n\t\t\t\thandleErrorResponse(message.payload as ErrorResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.CREATE_GAME_RESPONSE:\n\t\t\t\thandleCreateGameResponse(message.payload as CreateGameResponse);\n\t\t\t\tbreak\n\t\t\tcase CONSTANTS.JOIN_GAME_RESPONSE:\n\t\t\t\thandleJoinGameResponse(message.payload as JoinGameResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.NEW_PLAYER_RESPONSE:\n\t\t\t\thandleNewPlayerResponse(message.payload as NewPlayerResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.GAME_PROGRESS_RESPONSE:\n\t\t\t\thandleGameProgressResponse(message.payload as GameProgressResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.GAME_START_RESPONSE:\n\t\t\t\thandleGameStartResponse(message.payload as GameStartResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.PLAYER_FINISHED_RESPONSE:\n\t\t\t\thandlePlayerFinishedResponse(message.payload as PlayerFinishedResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.GAME_FINISHED_RESPONSE:\n\t\t\t\thandleGameFinishedResponse(message.payload as GameFinishedResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.NEXT_GAME_RESPONSE:\n\t\t\t\thandleNextGameResponse(message.payload as NextGameResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.LEAVE_GAME_RESPONSE:\n\t\t\t\thandleLeaveGameResponse(message.payload as LeaveGameResponse);\n\t\t\t\tbreak;\n\t\t\tcase CONSTANTS.LOBBY_CLOSED_RESPONSE:\n\t\t\t\thandleLobbyClosedResponse(message.payload as LobbyClosedResponse);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst handleErrorResponse = (payload: ErrorResponse) => {\n\t\tconsole.log(payload);\n\t}\n\n\tconst handleCreateGameResponse = (payload: CreateGameResponse) => {\n\t\tdispatch(createGameAction(payload));\n\t\tsetShowLink(true);\n\t}\n\n\tconst handleJoinGameResponse = (payload: JoinGameResponse) => {\n\t\tdispatch(joinGameAction(payload));\n\t}\n\t\n\tconst handleNewPlayerResponse = (payload: NewPlayerResponse) => {\n\t\tdispatch(newPlayerAction(payload));\n\t}\n\n\tconst handleGameProgressResponse = (payload: GameProgressResponse) => {\n\t\tdispatch(gameProgressAction(payload));\n\t}\n\n\tconst handleGameStartResponse = (payload: GameStartResponse) => {\n\t\tdispatch(gameStartAction(payload));\n\t}\n\n\tconst handlePlayerFinishedResponse = (payload: PlayerFinishedResponse) => {\n\t\tdispatch(playerFinishedAction(payload));\n\t}\n\n\tconst handleGameFinishedResponse = (payload: GameFinishedResponse) => {\n\t\tdispatch(gameFinishedAction(payload));\n\t}\n\n\tconst handleNextGameResponse = (payload: NextGameResponse) => {\n\t\tdispatch(nextGameAction(payload));\n\t\tsetReloaded(prev => !prev);\n\t}\n\n\tconst handleLeaveGameResponse = (payload: LeaveGameResponse) => {\n\t\tdispatch(leaveGameAction(payload));\n\t}\n\n\tconst handleLobbyClosedResponse = (payload: LobbyClosedResponse) => {\n\t\tdispatch(lobbyClosedAction(payload));\n\t\thandleLobbyClosedOpen();\n\t}\n\n\tconst handleStartGameClick = () => {\n\t\tws.current?.send(JSON.stringify({\n\t\t\taction: CONSTANTS.START_GAME_ACTION,\n\t\t}));\n\t}\n\n\n\tconst handleNextGameClick = () => {\n\t\tws.current?.send(JSON.stringify({\n\t\t\taction: CONSTANTS.NEXT_GAME_ACTION\n\t\t}));\n\t}\n\t\n\tconst handleRaceFieldChange = (text: string) => {\n\t\tws.current?.send(JSON.stringify({\n\t\t\taction: CONSTANTS.GAME_PROGRESS_ACTION,\n\t\t\tpayload: text,\n\t\t}));\n\t}\n\n\tconst handleLinkOpen = () => {\n\t\tsetShowLink(true);\n\t}\n\n\tconst handleLinkClose = () => {\n\t\tsetShowLink(false);\n\t}\n\n\tconst handleLobbyClosedOpen = () => {\n\t\tsetShowLobbyClosed(true);\n\t}\n\n\tconst handleLobbyClosedClose = () => {\n\t\tsetShowLobbyClosed(false);\n\t\thistory.push('/');\n\t}\n\n\treturn (\n\t\t<Container maxWidth='sm'>\n\t\t\t<Box minHeight='100vh' display='flex' flexDirection='column' py={5}>\n\t\t\t\t<Navbar />\n\t\t\t\t<Grid container justify='center'>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Box mt={2}>\n\t\t\t\t\t\t\t<StatusBar handleOpenLinkDialog={handleLinkOpen} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<UserProgress />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item className=\"aceEditorContainer\">\n\t\t\t\t\t\t<RaceField \n\t\t\t\t\t\t\tsnippet={raceContent} \n\t\t\t\t\t\t\tlanguage={language} \n\t\t\t\t\t\t\tdisabled={state !== 'inProgress' || checkPlayerFinished(placements, playerId)} \n\t\t\t\t\t\t\treloaded={reloaded}\n\t\t\t\t\t\t\tonChange={handleRaceFieldChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{ isHost ? (\n\t\t\t\t\t\t<Grid container item xs={12} justify='flex-end'>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Box mt={2}>\n\t\t\t\t\t\t\t\t\t{state === 'finished' ? (\n\t\t\t\t\t\t\t\t\t\t<Button  variant='contained' onClick={handleNextGameClick}>Next Game</Button>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleStartGameClick}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={state !== 'waiting'}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tStart Game\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t) : null\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t\t<Footer />\n\t\t\t</Box>\n\t\t\t<LinkDialog open={showLink} handleClose={handleLinkClose} />\n\t\t\t<LobbyClosedDialog open={showLobbyClosed} handleClose={handleLobbyClosedClose} />\n\t\t</Container>\n\t)\n}\n\n","export const CREATE_GAME_ACTION = 'createGame'\nexport const JOIN_GAME_ACTION = 'joinGame'\nexport const GAME_PROGRESS_ACTION = 'gameProgress'\nexport const START_GAME_ACTION = 'startGame'\nexport const NEXT_GAME_ACTION = 'nextGame'\nexport const LEAVE_GAME_ACTION = 'leaveGame'\n\nexport const ERROR_RESPONSE = 'errorResponse'\nexport const CREATE_GAME_RESPONSE\t= 'createGameResponse'\nexport const JOIN_GAME_RESPONSE = 'joinGameResponse'\nexport const NEW_PLAYER_RESPONSE = 'newPlayerResponse'\nexport const GAME_PROGRESS_RESPONSE = 'gameProgressResponse'\nexport const PLAYER_FINISHED_RESPONSE = 'playerFinishedResponse'\nexport const GAME_FINISHED_RESPONSE = 'gameFinishedResponse'\nexport const GAME_START_RESPONSE = 'gameStartResponse'\nexport const NEXT_GAME_RESPONSE = 'nextGameResponse'\nexport const LOBBY_CLOSED_RESPONSE = 'lobbyClosedResponse'\nexport const LEAVE_GAME_RESPONSE = 'leaveGameResponse'\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport { githubCallback, selectIsLoggedIn } from './authSlice';\n\n\nexport const GitHubCallback = (): JSX.Element => {\n    const dispatch = useDispatch();\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(githubCallback(new URLSearchParams(window.location.search)));\n    }, [dispatch])\n\n    useEffect(() => {\n        if (loggedIn) {\n            // remove query string from url (oauth state and code)\n            window.history.replaceState(null, \"\", window.location.href.split(\"?\")[0])\n            history.replace('/')\n        }\n    }, [loggedIn, history])\n\n    return <></>\n}\n\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  HashRouter\r\n} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { CssBaseline, MuiThemeProvider } from '@material-ui/core';\r\n\r\nimport { theme } from './theme';\r\nimport { MainMenu } from './features/main-menu/MainMenu';\r\nimport { LoginPage } from './features/auth/LoginPage';\r\nimport { RegisterPage } from './features/auth/RegisterPage';\r\nimport { refresh, selectIsLoggedIn, selectRefreshToken, selectUserID } from './features/auth/authSlice';\r\nimport { fetchUserData } from './features/user/userSlice';\r\nimport { CustomGame } from './features/game/custom-game/CustomGame';\r\nimport { GitHubCallback } from './features/auth/GitHubCallback';\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const refreshToken = useSelector(selectRefreshToken);\r\n  const [firstTime, setFirstTime] = useState(true);\r\n\r\n  const loggedIn = useSelector(selectIsLoggedIn);\r\n  const userid = useSelector(selectUserID);\r\n\r\n  // check if logged in on first load of web app\r\n  useEffect(() => {\r\n    if (firstTime && refreshToken) {\r\n      dispatch(refresh({ refreshToken }));\r\n      setFirstTime(false);\r\n    }\r\n  }, [firstTime, setFirstTime, refreshToken, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      dispatch(fetchUserData({ userid }))\r\n    }\r\n  }, [dispatch, loggedIn, userid])\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path='/auth/githubCallback'>\r\n            <Title title=\"Logging in...\" />\r\n            <GitHubCallback />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <Title title=\"Login - DevRacer\" />\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Title title=\"Register - DevRacer\" />\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path='/custom/:lobby?'>\r\n            <Title title=\"Custom Game - DevRacer\" />\r\n            <CustomGame />\r\n          </Route>\r\n          <Route path='/'>\r\n            <Title title=\"DevRacer\" />\r\n            <MainMenu />\r\n          </Route>\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </HashRouter>\r\n    </MuiThemeProvider>\r\n  )\r\n};\r\n\r\nconst Title = (props: any): JSX.Element => {\r\n  useEffect(() => {\r\n    document.title = props.title;\r\n  }, [props.title]);\r\n  return <></>;\r\n};\r\n\r\nexport default App;\r\n","import { language, Race, NewPracticeRaceGQLResponse } from \"./types\";\n\n// maps an int from the backend to a language\nconst mapNumberToLanguage = (language: number): language => {\n\tswitch(language) {\n\t\tcase 1:\n\t\t\treturn 'c_cpp';\n\t\tcase 2:\n\t\t\treturn 'golang';\n\t\tcase 3:\n\t\t\treturn 'javascript';\n\t\tcase 4:\n\t\t\treturn 'python';\n\t\tdefault:\n\t\t\treturn 'plain_text'\n\t}\n}\n\n// maps the graphql response into our own NewPracticeRace type. The only real change\n// that we are making is to map the language to something usable on our end\nexport const mapGQLPracticeRaceToNewPracticeRace = (res: NewPracticeRaceGQLResponse): Race => {\n\tlet practiceRace = res.data.practiceRace;\n\tlet snippet = practiceRace.snippet\n\treturn {\n\t\tsnippet: {\n\t\t\tid: snippet.id,\n\t\t\traceContent: snippet.raceContent,\n\t\t\ttokenCount: snippet.tokenCount,\n\t\t\tlanguage: mapNumberToLanguage(snippet.language)\n\t\t},\n\t\ttypedSoFar: '',\n\t\ttimeLimit: practiceRace.timeLimit\n\t};\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\n\nimport axios from 'axios'\n\nimport { newPracticeRaceGQL } from \"./graphql\";\nimport { Race, NewPracticeRaceGQLResponse, RaceFieldState } from './types'\nimport { mapGQLPracticeRaceToNewPracticeRace } from \"./utils\";\nimport { BACKEND_HOSTNAME } from \"../../config\";\n\n// redux prefix for this slice\nconst RACE_FIELD = 'raceField';\n\n// fetches a new practice race from the backend using graphql\nexport const fetchNewPracticeRace = createAsyncThunk<Race>(\n\t`${RACE_FIELD}/fetchNewPracticeRace`, \n\tasync () => {\n\t\tconst response = await axios.post<NewPracticeRaceGQLResponse>(\n\t\t\t`${BACKEND_HOSTNAME}/graphql`, \n\t\t\t{ query: newPracticeRaceGQL }\n\t\t);\n\t\treturn mapGQLPracticeRaceToNewPracticeRace(response.data);\n\t}\n);\n\nconst initialState: RaceFieldState = {\n\trace: {\n\t\tsnippet: {\n\t\t\tid: '0',\n\t\t\traceContent: '',\n\t\t\ttokenCount: 0,\n\t\t\tlanguage: 'plain_text',\n\t\t},\n\t\ttypedSoFar: '',\n\t\ttimeLimit: 0\n\t},\n\tstatus: 'idle'\n}\n\nconst raceFieldSlice = createSlice({\n\tname: RACE_FIELD,\n\tinitialState,\n\treducers: {\n\t\t// action payload should just contain the string that the user has typed\n\t\t// so far\n\t\ttypedSoFarChanged: (state, action: PayloadAction<string>) => {\n\t\t\tstate.race.typedSoFar = action.payload;\n\t\t}\n\t},\n\textraReducers: builder => {\n\t\tbuilder.addCase(fetchNewPracticeRace.fulfilled, (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.race = action.payload;\n\t\t});\n\t\t// TODO: Add some error handling here, have to figure out what to do in the\n\t\t// case of an error\n\t\tbuilder.addCase(fetchNewPracticeRace.rejected, (state, action) => {\n\t\t\tconsole.log(action);\n\t\t})\n\t}\n})\n\nexport default raceFieldSlice.reducer;\n\nexport const { typedSoFarChanged } = raceFieldSlice.actions;\n\nexport const selectSnippet = (state: RootState) => state.raceField.race.snippet;\nexport const selectTypedSoFar = (state: RootState) => state.raceField.race.typedSoFar;\n","// GraphQL query for getting a NewPracticeRace\nexport const newPracticeRaceGQL = `\n  query getPracticeRace {\n    practiceRace {\n      snippet {\n        id\n        raceContent\n        tokenCount\n        language\n      }\n      timeLimit\n    }\n  }\n`;\n","import { configureStore, ThunkAction, Action, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport raceFieldReducer from '../features/race-text-field/raceFieldSlice'\r\nimport authReducer from '../features/auth/authSlice';\r\nimport userReducer from '../features/user/userSlice';\r\nimport gameReducer from '../features/game/gameSlice';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n  whitelist: ['auth', 'user']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  raceField: raceFieldReducer,\r\n  user: userReducer,\r\n  auth: authReducer,\r\n  game: gameReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persister = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { persister, store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persister}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}